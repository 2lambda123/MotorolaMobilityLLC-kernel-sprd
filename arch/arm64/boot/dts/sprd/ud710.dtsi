/*
 * Spreadtrum Roc1 SoC DTS file
 *
 * Copyright (C) 2018, Spreadtrum Communications Inc.
 *
 * This file is licensed under a dual GPLv2 or X11 license.
 */

#include <dt-bindings/clock/sprd,roc1-clk.h>
#include "roc1.dtsi"
#include "ud710-modem.dtsi"

/ {

	cpus {
		#address-cells = <2>;
		#size-cells = <0>;

		cpu-map {
			cluster0 {
				core0 {
					cpu = <&CPU0>;
				};
				core1 {
					cpu = <&CPU1>;
				};
				core2 {
					cpu = <&CPU2>;
				};
				core3 {
					cpu = <&CPU3>;
				};
			};
			cluster1 {
				core4 {
					cpu = <&CPU4>;
				};
				core5 {
					cpu = <&CPU5>;
				};
				core6 {
					cpu = <&CPU6>;
				};
				core7 {
					cpu = <&CPU7>;
				};
			};
		};

		CPU0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a55","arm,armv8";
			reg = <0x0 0x0>;
		};
		CPU1: cpu@100 {
			device_type = "cpu";
			compatible = "arm,cortex-a55","arm,armv8";
			reg = <0x0 0x100>;
		};
		CPU2: cpu@200 {
			device_type = "cpu";
			compatible = "arm,cortex-a55","arm,armv8";
			reg = <0x0 0x200>;
		};
		CPU3: cpu@300 {
			device_type = "cpu";
			compatible = "arm,cortex-a55","arm,armv8";
			reg = <0x0 0x300>;
		};
		CPU4: cpu@400 {
			device_type = "cpu";
			compatible = "arm,cortex-a75","arm,armv8";
			reg = <0x0 0x400>;
		};
		CPU5: cpu@500 {
			device_type = "cpu";
			compatible = "arm,cortex-a75","arm,armv8";
			reg = <0x0 0x500>;
		};
		CPU6: cpu@600 {
			device_type = "cpu";
			compatible = "arm,cortex-a75","arm,armv8";
			reg = <0x0 0x600>;
		};
		CPU7: cpu@700 {
			device_type = "cpu";
			compatible = "arm,cortex-a75","arm,armv8";
			reg = <0x0 0x700>;
		};
	};

	gic: interrupt-controller@12000000 {
		compatible = "arm,gic-v3";
		#interrupt-cells = <3>;
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		redistributor-stride = <0x0 0x20000>;	// 128KB stride
		#redistributor-regions = <1>;
		interrupt-controller;
		reg = <0x0 0x12000000 0 0x20000>,	// GICD
			<0x0 0x12040000 0 0x100000>;	// GICR
		interrupts = <1 9 4>;
	};
	timer {
		compatible = "arm,armv8-timer";
		interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_HIGH>, /* Physical Secure PPI */
			<GIC_PPI 14 IRQ_TYPE_LEVEL_HIGH>, /* Physical Non-Secure PPI */
			<GIC_PPI 11 IRQ_TYPE_LEVEL_HIGH>, /* Virtual PPI */
			<GIC_PPI 10 IRQ_TYPE_LEVEL_HIGH>; /* Hipervisor PPI */
		arm,no-tick-in-suspend;
	};

	soc {
		apahb_gate: apahb-gate {
			compatible = "sprd,roc1-apahb-gate";
			sprd,syscon = <&ap_ahb_regs>; /* 0x20100000 */
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		ap_clk: clock-controller@20200000 {
			compatible = "sprd,roc1-ap-clk";
			reg = <0 0x20200000 0 0x1000>;
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		ipa_gate: ipa-gate {
			compatible = "sprd,roc1-ipa-gate";
			sprd,syscon = <&ipa_ahb_regs>;
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		ipa_clk: clock-controller@21050000 {
			compatible = "sprd,roc1-ipa-clk";
			reg = <0 0x21050000 0 0x1000>;
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		aon_clk: clock-controller@32080000 {
			compatible = "sprd,roc1-aonapb-clk";
			reg = <0 0x32080000 0 0x1000>;
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		aonapb_gate: aonapb-gate {
			compatible = "sprd,roc1-aon-gate";
			sprd,syscon = <&aon_apb_regs>; /* 0x32090000 */
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		pmu_gate: pmu-gate {
			compatible = "sprd,roc1-pmu-gate";
			sprd,syscon = <&pmu_apb_regs>; /* 0x32280000 */
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		dpll: dpll {
			compatible = "sprd,roc1-g0-pll";
			reg = <0 0x32390000 0 0x3000>; /* 0x32390000 */
			clocks = <&aon_clk CLK_ANALOG_IO_APB>;
			#clock-cells = <1>;
		};

		mpll1: mpll1 {
			compatible = "sprd,roc1-g4-pll";
			sprd,syscon = <&anlg_phy_g4_regs>; /* 0x323c0000 */
			clocks = <&aon_clk CLK_ANALOG_IO_APB>;
			#clock-cells = <1>;
		};

		ana_g5_clk: ana-g5-clk {
			compatible = "sprd,roc1-g5-pll";
			sprd,syscon = <&anlg_phy_g5_regs>; /* 0x323d0000 */
			clocks = <&aon_clk CLK_ANALOG_IO_APB>;
			#clock-cells = <1>;
		};

		mpll2: mpll2 {
			compatible = "sprd,roc1-g9-pll";
			reg = <0 0x32410000 0 0x3000>; /* 0x32410000 */
			clocks = <&aon_clk CLK_ANALOG_IO_APB>;
			#clock-cells = <1>;
		};

		g12_pll: g12-pll {
			compatible = "sprd,roc1-g12-pll";
			reg = <0 0x32414000 0 0x3000>; /* 0x32414000 */
			clocks = <&aon_clk CLK_ANALOG_IO_APB>;
			#clock-cells = <1>;
		};

		mpll0: mpll0 {
			compatible = "sprd,roc1-g17-pll";
			reg = <0 0x32418000 0 0x3000>; /* 0x32418000 */
			clocks = <&aon_clk CLK_ANALOG_IO_APB>;
			#clock-cells = <1>;
		};

		audcpapb_gate: audcpapb-gate {
			compatible = "sprd,roc1-audcpapb-gate";
			sprd,syscon = <&audcp_apb_regs>; /* 0x3350d000 */
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		audcpahb_gate: audcpahb-gate {
			compatible = "sprd,roc1-audcpahb-gate";
			sprd,syscon = <&audcp_ahb_regs>; /* 0x335e0000 */
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		gpu_clk: gpu-clk {
			compatible = "sprd,roc1-gpu-clk";
			sprd,syscon = <&gpu_apb_regs>;	/* 0x60100000 */
			clocks = <&aon_clk CLK_AP_GPU>;
			#clock-cells = <1>;
		};

		mm_clk: clock-controller@62100000 {
			compatible = "sprd,roc1-mm-clk";
			reg = <0 0x62100000 0 0x1000>;
			clocks = <&aonapb_gate CLK_MM_EB>;
			#clock-cells = <1>;
		};

		mm_gate: mm-gate {
			compatible = "sprd,roc1-mm-gate-clk";
			sprd,syscon = <&mm_ahb_regs>;
			clocks = <&aonapb_gate CLK_MM_EB>;
			#clock-cells = <1>;
		};

		ai_gate: ai-gate {
			compatible = "sprd,roc1-ai-gate-clk";
			sprd,syscon = <&ai_apb_regs>;
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};

		ai_clk: clock-controller@6fd04000 {
			compatible = "sprd,roc1-ai-clk";
			reg = <0 0x6fd04000 0 0x1000>;
			clocks = <&aonapb_gate CLK_AP_AI>;
			#clock-cells = <1>;
		};

		apapb_gate: apapb-gate {
			compatible = "sprd,roc1-apapb-gate";
			sprd,syscon = <&ap_apb_regs>; /* 0x71000000 */
			clocks = <&ext_26m>;
			#clock-cells = <1>;
		};
	};

};

&sdio0 {
	clock-names = "sdio_clk_source", "sdio_ahb_enable";
	clocks = <&ext_26m>, <&apapb_gate 22>;
};

&sdio1 {
	clock-names = "sdio_clk_source", "sdio_ahb_enable";
	clocks = <&ext_26m>, <&apapb_gate 23>;
};

&sdio2 {
	clock-names = "sdio_clk_source", "sdio_ahb_enable";
	clocks = <&ext_26m>, <&apapb_gate 24>;
};

&sdio3 {
	clock-names = "sdio_clk_source", "sdio_ahb_enable";
	clocks = <&ext_26m>, <&apapb_gate 25>;
};

&i2c0 {
	clock-names ="enable", "i2c", "source";
	clocks = <&apapb_gate CLK_I2C0_EB>;
};

&i2c1 {
	clock-names ="enable", "i2c", "source";
	clocks = <&apapb_gate CLK_I2C1_EB>;
};

&i2c2 {
	clock-names ="enable", "i2c", "source";
	clocks = <&apapb_gate CLK_I2C2_EB>;
};

&i2c3 {
	clock-names ="enable", "i2c", "source";
	clocks = <&apapb_gate CLK_I2C3_EB>;
};

&i2c4 {
	clock-names ="enable", "i2c", "source";
	clocks = <&apapb_gate CLK_I2C4_EB>;
};
