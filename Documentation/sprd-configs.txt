64BIT
	[arch] arm64,x86
	[plat] sharkl3,sharkle,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Support 64 bit system.
AARCH32_SHOW_AARCH64_CPUINFO
	[arch] arm
	[plat] sharkle,sharklefp
	[field] code
	[subsys] core
	[must] user
	[function] This option show cpuinfo ARMV8.
ADF
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable Atomic Display Framework core driver.
ADF_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable SPRD specific display driver for ADF.
ADVISE_SYSCALLS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable madvise/fadvise syscalls
AEABI
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Use the ARM EABI to compile the kernel.
AIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] This option enables POSIX asynchronous I/O which may by used
			by some high performance threaded applications. Disabling this
			option saves about 7k.
ALIGNMENT_TRAP
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] ARM processors cannot fetch/store information which is not
			naturally aligned on the bus. This is necessary for correct
			operation of some network protocols.
ALLOW_DEV_COREDUMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Allow device coredump.
ANDROID
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Enable for Android driver.
ANDROID_BINDER_DEVICES
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] vts require. Set with "binder,hwbinder,vndbinder" if the
			version of android later than 8.0.
ANDROID_BINDER_IPC
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] vts require. Binder is used in Android for both communication
			between processes, and remote method invocation.
ANDROID_LOGGER
	[arch] arm
	[plat] sharklefp
	[field] make
	[subsys] core
	[must] console
	[function] Only enable for mocro5, This adds support for system-wide logging using four log buffers.
ANDROID_LOW_MEMORY_KILLER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] user
	[function] vts require, Registers processes to be killed when low memory conditions, this is useful
		   as there is no particular swap space on android.
ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] android_console
	[function] Threshold table in lowmemorykiller.
ANDROID_LOW_MEMORY_KILLER_MEMINFO
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] Show memory information when lmk kills process
ANDROID_PARANOID_NETWORK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] specified config for android
ANDROID_TIMED_GPIO
	[arch] all
	[plat] all
	[field] make
	[subsys] gpio
	[must] user
	[function] Unlike generic gpio is to allow programs to access
		and manipulate gpio registers from user space, timed output/gpio
		is a system to allow changing a gpio pin and restore it automatically
		after a specified timeout.
ANDROID_TIMED_OUTPUT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support drivers about android timed output.
ANON_INODES
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support anonymous inodes.
ARCH_DMA_ADDR_T_64BIT
	[arch] arm64,x86
	[plat] sharkl3,sharkle,isharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Enable the DMA address used 64bit.
ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support atomic if positive.
ARCH_HAS_CACHE_LINE_SIZE
	[arch] arm64,x86
	[plat] sharkl3,sharkle,isharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Support the cache line size function.
ARCH_HAS_ELF_RANDOMIZE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] An architecture supports choosing randomized locations for
			stack, mmap, brk, and ET_DYN.
ARCH_HAS_GCOV_PROFILE_ALL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support GCOV_PROFILE_ALL.
ARCH_HAS_HOLES_MEMORYMODEL
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] The non-contiguous memory block can be handled correctly.
ARCH_HAS_SG_CHAIN
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support kernel sg chain.
ARCH_HAS_TICK_BROADCAST
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32,sharkle,sharkle,sharklj1
	[field] make,code
	[subsys] core
	[must] console
	[function] Architecture can handle broadcast in a driver-agnostic way.
ARCH_HAVE_CUSTOM_GPIO_H
	[arch] arm
	[plat] all
	[field] menu
	[subsys] gpio
	[must] user
	[function] Generic gpio support
ARCH_HIBERNATION_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] power
	[must] user
	[function] PM_SLEEP_SMP depends on it.
ARCH_MIGHT_HAVE_PC_PARPORT
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] Support the architecture might have PC parallel port hardware.
ARCH_MMAP_RND_BITS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Use for ASLR of mmap base address.
ARCH_MMAP_RND_BITS_MAX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Use for ASLR of mmap base address.
ARCH_MMAP_RND_BITS_MIN
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Use for ASLR of mmap base address.
ARCH_MMAP_RND_COMPAT_BITS
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Number of bits to use for ASLR of mmap base address for compatible applications.
ARCH_MMAP_RND_COMPAT_BITS_MAX
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Number of bits to use for ASLR of mmap base address for compatible applications.
ARCH_MMAP_RND_COMPAT_BITS_MIN
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Number of bits to use for ASLR of mmap base address for compatible applications.
ARCH_MULTIPLATFORM
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Allow multiple platforms to be selected.
ARCH_MULTI_V6_V7
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] Enable system support ARM V6 V7.
ARCH_MULTI_V7
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] Enable system support ARM V6.
ARCH_NR_GPIO
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] code
	[subsys] gpio
	[must] console
	[function] Maximum number of GPIOs in the system.
ARCH_PHYS_ADDR_T_64BIT
	[arch] arm64,x86
	[plat] sharkl3,sharkle,isharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Support the 64bit physical address.
ARCH_SELECT_MEMORY_MODEL
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Select memory model.
ARCH_SPARSEMEM_DEFAULT
	[arch] all
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem module options.
ARCH_SPARSEMEM_ENABLE
	[arch] all
	[plat] sharkl3,sharkle
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Enable sparsemem.
ARCH_SPRD
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] The global sprd debug.
ARCH_SUPPORTS_ATOMIC_RMW
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support atomic rmw.
ARCH_SUPPORTS_DEBUG_PAGEALLOC
	[arch] all
	[plat] sharkl3,sharkle
	[field] make
	[subsys] mm
	[must] userdebug
	[function] Provides a hook to map and unmap pages for debugging purposes.
ARCH_SUPPORTS_UPROBES
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] Enable the kernel has the ability of uprobe_event.
ARCH_SUSPEND_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] power
	[must] user
	[function] PM_SLEEP_SMP depends on it.
ARCH_USE_BUILTIN_BSWAP
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] Modern versions of GCC (since 4.4) have builtin functions
			for handling byte-swapping.
ARCH_USE_CMPXCHG_LOCKREF
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable ARCH_USE_CMPXCHG_LOCKREF for 64 bit since it shows performance
			improvements with Linus' simple stat() test case of up to 50% on a 30 cpu system.
ARCH_WANT_COMPAT_IPC_PARSE_VERSION
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support compat more ipc parse version.
ARCH_WANT_FRAME_POINTERS
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] menu
	[must] console
	[function] Enable kernel support frame pointer.
ARCH_WANT_GENERAL_HUGETLB
	[arch] arm
	[plat] pike2,sharkle32,sharklefp
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support general huge table.
ARCH_WANT_HUGE_PMD_SHARE
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Share pmd page for hugetlb.
ARCH_WANT_IPC_PARSE_VERSION
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] code
	[subsys] core
	[must] console
	[function] Support kernel ipc parse version.
ARCH_WANT_OPTIONAL_GPIOLIB
	[arch] all
	[plat] all
	[field] menu
	[subsys] gpio
	[must] user
	[function] Generic gpio support
ARM
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] menu
	[subsys] core
	[must] console
	[function] Enable for arm architecture.
ARM64
	[arch] arm64
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] core
	[must] console
	[function] Enalbe configs about ARM64.
ARM64_4K_PAGES
	[arch] arm64
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] core
	[must] console
	[function] Set pages size 4k on ARM64.
ARM64_CRYPTO
	[arch] arm64
	[plat] sharkle,sharkl3,sharkl5,sharklj1,whale2
	[field] menu
	[subsys] security
	[must] user
	[function] ARM64 Accelerated Cryptographic Algorithms.
ARM64_ERRATUM_1024718
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A55 erratum problem.
ARM64_ERRATUM_819472
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
ARM64_ERRATUM_824069
	[arch] arm64
	[plat] sharkle
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
ARM64_ERRATUM_826319
	[arch] arm64
	[plat] sharkle
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
ARM64_ERRATUM_827319
	[arch] arm64
	[plat] sharkle
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
ARM64_ERRATUM_843419
	[arch] arm64
	[plat] sharkle
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
ARM64_ERRATUM_845719
	[arch] arm64
	[plat] sharkle
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
ARM64_HW_AFDBM
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] arch
	[must] user
	[function] The ARMv8.1 architecture extensions introduce support for
			hardware updates of the access and dirty information in page.
ARM64_LSE_ATOMICS
	[arch] arm64
	[plat] sharkl3
	[field] make,code
	[subsys] arch
	[must] user
	[function] ARMv8.1 introduces new atomic instructions that
			are designed specifically to scale in very large systems.
ARM64_MODULE_CMODEL_LARGE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] arch
	[must] console
	[function] Slightly pre-requisites for supporting Transparent Huge Pages.
ARM64_MODULE_PLTS
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernek support module plts , PLTS(Procedure Linkage Tables).
ARM64_PAN
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] arch
	[must] user
	[function] Privileged Access Never (PAN; part of the ARMv8.1 Extensions)
			prevents the kernel or hypervisor from accessing user-space (EL0) memory directly.
ARM64_SW_TTBR0_PAN
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] core
	[must] user
	[function] vts require, Using software enable function of PAN.
ARM64_UAO
	[arch] arm64
	[plat] sharkl3
	[field] make,code
	[subsys] arch
	[must] console
	[function] ARM V8.2 feature,Enable support for User Access Override (UAO).
ARM64_VA_BITS
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Defined how many bits virtual address the kernel used.
ARM64_VA_BITS_39
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Defined how many bits virtual address the kernel used.
ARMV8_DEPRECATED
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] core
	[must] console
	[function] Legacy software support may require certain instructions
		that have been deprecated or obsoleted in the architecture.
		Enable this config to enable selective emulation of these features.
ARM_AMBA
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle,sharklj1,whale2
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] Coresight devices depend on AMBA bus,
		   enable it to support coresight architecture.
ARM_ARCH_TIMER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] timer
	[must] console
	[function] Support arch timer.
ARM_ARCH_TIMER_EVTSTREAM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for ARM architected timer event stream generation.
ARM_ARCH_TIMER_VCT_ACCESS
	[arch] arm,arm64
	[plat] pike2,sharkle32,sharklefp
	[field] code
	[subsys] timer
	[must] console
	[function] This option enables support for reading the ARM architected timer's
		virtual counter in userspace.
ARM_CPUIDLE
	[arch] arm,arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] cpuidle
	[must] user
	[function] Enable arm/arm64 cpuidle driver
ARM_CPU_SUSPEND
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] power
	[must] user
	[function] Support arm cpu suspend.
ARM_CPU_TOPOLOGY
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Support cpu topology definition.
ARM_CRYPTO
	[arch] arm
	[plat] sharkle32 pike2 sharkl2
	[field] make
	[subsys] crypto
	[must] none
	[function] ARM Accelerated Cryptographic Algorithms
ARM_DMA_MEM_BUFFERABLE
	[arch] arm
	[plat] sharkle32,pike2,sharklefp
	[field] code
	[subsys] mm
	[must] console
	[function] With the advent of ARMv7, mapping memory with differing
		types results in unpredictable behaviour, so on these CPUs,
		this option is forced on.
ARM_GIC
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support for ARM GIC.
ARM_GIC_V2M
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for ARM GIC_V2M. Select by IF PCI_MSI.
ARM_GIC_V3
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support ARM GIC V3.
ARM_GIC_V3_ITS
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for ARM GIC_V3_ITS. Select by IF  PCI_MSI.
ARM_HAS_SG_CHAIN
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] menu
	[subsys] core
	[must] console
	[function] IF ARCH_SPRD, this config will select ARM_HAS_SG_CHAIN.
ARM_L1_CACHE_SHIFT
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] code
	[subsys] core
	[must] console
	[function] Set CPU L1 cache size 1<<6.
ARM_L1_CACHE_SHIFT_6
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] code
	[subsys] core
	[must] console
	[function] Set CPU L1 cache size 1<<6.
ARM_PATCH_PHYS_VIRT
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] code
	[subsys] core
	[must] console
	[function] Patch physical to virtual translations at runtime.
ARM_PMU
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] ARM PMU framework.
ARM_PSCI
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] arm
	[must] user
	[function] hotplug with security depend on PSCI,
		   enable it to support hotplug
ARM_PSCI_FW
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32,sharkle,whale2,sharkL3
	[field] make,code
	[subsys] core
	[must] user
	[function] hotplug with security depend on PSCI_FW,
		   enable it to support hotplug
ARM_SPRD_CPUFREQ
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32,sharkl3
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] This function is enabele sprd cpufreq driver
ARM_SPRD_CPUFREQHW_SHARKL3
	[arch] arm,arm64
	[plat] sharkl3
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] This function is enabele sprd HW cpufreq driver for sharkl3
ARM_SPRD_CPUIDLE
	[arch] arm
	[plat] pike2
	[field] make,code
	[subsys] cpuidle
	[must] user
	[function] This macro is used to open cpuidle and light sleep function.
ARM_THUMB
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Support Thumb user binaries.
ARM_UNWIND
	[arch] all
	[plat] all
	[field] make,code
	[subsys] soc
	[must] debug
	[function] Enable stack unwinding support, disable on user version.
ARM_VIRT_EXT
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support VIRT ext.
ASHMEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Enable the Anonymous Shared Memory Subsystem,vts require.
ASN1
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] Build a simple ASN.1 grammar compiler that produces
		a bytecode output that can be interpreted by
		the ASN.1 stream decoder and used to inform
		it as to what tags are to be expected in a stream
		and what functions  to call on what tags.
ASSOCIATIVE_ARRAY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Generic associative array.
ASYMMETRIC_KEY_TYPE
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] Asymmetric (public-key cryptographic) key type, following pixel2.
ASYMMETRIC_PUBLIC_KEY_SUBTYPE
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] Asymmetric public-key crypto algorithm subtype
AUDIT
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] vts require
AUDIT_ARCH_COMPAT_GENERIC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] console
	[function] selinux avc audit
AUDIT_COMPAT_GENERIC
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] console
	[function] selinux avc audit
AUDIT_GENERIC
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] console
	[function] selinux avc audit
AUTO_ZRELADDR
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Auto calculation of the decompressed kernel image address.
BACKLIGHT_CLASS_DEVICE
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Backlight sysfs and core driver.
BACKLIGHT_LCD_SUPPORT
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable display backlight driver.
BACKLIGHT_PWM
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable pwm backlight driver.
BACKLIGHT_SC2703
	[arch] all
	[plat] sharkl3
	[field] make
	[subsys] video
	[must] home
	[function] Backlight Driver for Dialog SC2703 PMIC
BACKLIGHT_SC2721_BLTCLED
	[arch] arm
	[plat] sharkle32_fp
	[field] make
	[subsys] video
	[must] home
	[function] Backlight Driver for SC2721 BLTCLED PWM mode
BASE_FULL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Disabling this option reduces the size of miscellaneous core
		kernel data structures. This saves memory on small machines,
		but may reduce performance.
BASE_SMALL
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] Settint the cpu log buffer size.
BATTERY_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charge
BCMA_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] AMBA
	[must] user
	[function] Broadcom specific AMBA
BINARY_PRINTF
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Report trace with binary.
BINFMT_ELF
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Kernel support for ELF binaries.
BINFMT_SCRIPT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Kernel support for scripts starting with #!
BITREVERSE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support bit reverse.
BLK_DEV
	[arch] all
	[plat] all
	[field] make,code
	[subsys] md
	[must] user
	[function] Support block devices.
BLK_DEV_DM
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Device-mapper is a low level volume manager.
		   It works by allowing people to specify mappings for ranges of logical sectors.
BLK_DEV_DM_BUILTIN
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Support BLK_DEV_DM function.
BLK_DEV_INITRD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Initial RAM filesystem and RAM disk (initramfs/initrd) support.
BLK_DEV_IO_TRACE
	[arch] all
	[plat] all_sp
	[field] make,code
	[subsys] core
	[must] debug
	[function] Trace block device IO function.
BLK_DEV_LOOP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Loopback device support
BLK_DEV_LOOP_MIN_COUNT
	[arch] all
	[plat] all
	[field] code
	[subsys] block
	[must] user
	[function] Static number of loop devices to be unconditionally pre-created
		   at init time. we set this value to 0 for known problem.
BLK_DEV_RAM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] user
	[function] RAM block device support
BLK_DEV_RAM_COUNT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] user
	[function] Default number of RAM disks
BLK_DEV_RAM_SIZE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] user
	[function] Default RAM disk size (kbytes).
BLK_DEV_SD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support host udisk function.
BLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] busybox_console
	[function] Provide block layer support for the kernel.
		   If this option is disabled:
		    - block device files will become unusable
		    - some filesystems (such as ext3) will become
		   unavailable.
BLOCK_COMPAT
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] busybox_console
	[function] block_dev support compat_ioctl func.
BOOST_KILL
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] none
	[function] The process to be killed will be move to fast cpu and
			its nice value will also set to -20.
BOOST_SIGKILL_FREE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] The process to be killed will release its memory before all threads are dead.
BOOTPARAM_HARDLOCKUP_PANIC
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] none
	[function] Panic (Reboot) On Hard Lockups.
BOOTPARAM_HARDLOCKUP_PANIC_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Decided by BOOTPARAM_HARDLOCKUP_PANIC.
BOOTPARAM_HUNG_TASK_PANIC_VALUE
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] Trigger kernel panic when detect hung task.
BOOTPARAM_SOFTLOCKUP_PANIC_VALUE
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] Trigger kernel panic when detect soft-lockup.
BOUNCE
	[arch] all
	[plat] pike2,sharkl3,sharkle,sharkle32
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] bounce buffer handling for block devices.
BPF
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support Berkeley Packet Filter.
BQL
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] depends on SYSFS, Byte queue limits are a mechanism to limit the size of the transmit
		hardware queue on a NIC by a number of bytes. The goal of these byte
		queue limits is to reduce latency caused by excessive queuing in
		hardware without sacrificing throughput.
BRANCH_PROFILE_NONE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] No branch profiling
BUG
	[arch] all
	[plat] all
	[field] code
	[subsys] debug
	[must] debug
	[function] Disabling this option eliminates support for BUG and WARN, reducing
		the size of your kernel image and potentially quietly ignoring numerous fatal conditions.
		You should only consider disabling this option for embedded systems with no facilities for
		reporting errors.
BUILDTIME_EXTABLE_SORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable the kernel sort the exeception table.
BUILD_ARM64_DTC
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] menu
	[subsys] core
	[must] console
	[function] Path of DTC tools. Compiling for dtb/dtbo.
BUILD_ARM64_DTC_FLAGS
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] menu
	[subsys] core
	[must] console
	[function] Parameters of DTC tools.
BUILD_ARM_DTC
	[arch] arm
	[plat] sharkle32,pike2
	[field] menu
	[subsys] core
	[must] console
	[function] Path of DTC tools. Compiling for dtb/dtbo.
BUILD_ARM_DTC_FLAGS
	[arch] arm
	[plat] sharkle32,pike2
	[field] menu
	[subsys] core
	[must] console
	[function] Path of DTC tools. Compiling for dtb/dtbo.
BUILD_BIN2C
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] user
	[function] vts require, Enable file format exchange from BIN to C.
		   enable by IKCONFIG
CC_OPTIMIZE_FOR_PERFORMANCE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] menu
	[subsys] build
	[must] user
	[function] This is the default optimization level for the kernel, building
		with the "-O2" compiler flag for best performance and most helpful compile-time warnings.
CC_OPTIMIZE_FOR_SIZE
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make
	[subsys] soc
	[must] user
	[function] Optimize for size.
CC_STACKPROTECTOR
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] build
	[must] user
	[function] Set when a stack-protector mode is enabled, so that the build
		can enable kernel-side support for the GCC feature.
CC_STACKPROTECTOR_NONE
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] menu
	[subsys] build
	[must] user
	[function] Disable "stack-protector" GCC feature.
CC_STACKPROTECTOR_STRONG
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] build
	[must] user
	[function] Functions will have the stack-protector canary logic added.
CFG80211
	[arch] all
	[plat] all
	[field] code, menu,make
	[subsys] wireless
	[must] user
	[function] is the Linux wireless LAN (802.11) configuration API
CFG80211_CERTIFICATION_ONUS
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Give support to CFG80211_REG_CELLULAR_HINTS.
CFG80211_CRDA_SUPPORT
	[arch] all
	[plat] all
	[field] code
	[subsys] wireless
	[must] user
	[function] Central Regulatory Domain Agent
CFG80211_DEFAULT_PS
	[arch] all
	[plat] all
	[field] code
	[subsys] wireless
	[must] user
	[function] Enables powersave mode by default
CFG80211_INTERNAL_REGDB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] wireless
	[must] user
	[function] is regulatory rules database used by Linux.
CFG80211_REG_CELLULAR_HINTS
	[arch] all
	[plat] all
	[field] code
	[subsys] net
	[must] user
	[function] Give top priority to country code from SIM card.
CGROUPS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, This option adds support for grouping sets of
		processes together, for use with process control subsystems such as
		Cpusets, CFS, memory controls or device isolation.
CGROUP_CPUACCT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Provides a simple Resource Controller for monitoring the
		total CPU consumed by the tasks in a cgroup.
CGROUP_DEBUG
	[arch] 
	[plat] 
	[field] 
	[subsys] 
	[must] 
	[function] 
CGROUP_FREEZER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Freezer cgroup subsystem(vts require)
CGROUP_SCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Group CPU scheduler(vts require)
CGROUP_SCHEDTUNE
	[arch] arm,arm64
	[plat] sharkL3
	[field] code
	[subsys] sched
	[must] user
	[function] CFS tasks boosting cgroup subsystem
CHARGER_FAN54015
	[arch] all
	[plat] sharkle
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charge
CHARGER_SC2703
	[arch] all
	[plat] sharkl3
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charge
CHARGER_SC2720
	[arch] all
	[plat] pike2
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charge
CHARGER_SC2721
	[arch] all
	[plat] sharkl2,sharkle,sharklj1,sharkl3
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charge
CLEANCACHE
	[arch] all
	[plat] isharkl2,sharkl2,sharkl3,sharklJ1,sharkle
	[field] make
	[subsys] memory
	[must] user
	[function] This function is used to enable charge
CLKDEV_LOOKUP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] user
	[function] This macro is used to provide interfaces
			for clock customer.
CLKSRC_MMIO
	[arch] arm
	[plat] sharkle32,pike2,sharklefp
	[field] make
	[subsys] clock
	[must] console
	[function] Enable clocksource in mmio mode.
CLKSRC_OF
	[arch] all
	[plat] all
	[field] clock
	[subsys] core
	[must] console
	[function] Enable clocksource about open fireware.
CLKSRC_PROBE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] console
	[function] Enable clocksource probe function.
CLKSRC_SPRD
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support sprd timer.
CLONE_BACKWARDS
	[arch] all
	[plat] all
	[field] code
	[subsys] clock
	[must] console
	[function] Architecture has tls passed as the 4th argument of clone(2),
		not the 5th one.
CLZ_TAB
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] selected by MPILIB
CMDLINE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] arch
	[must] user
	[function] Default kernel command string. Set to NULL.
COMMON_CLK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] arch
	[must] console
	[function] Clock driver needs common clock framework.
COMMON_CLK_XGENE
	[arch] none
	[plat] none
	[field] none
	[subsys] none
	[must] none
	[function] none
COMPACTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Allow for memory compaction.
COMPAT
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] This option enables support for a 32-bit EL0 running under a 64-bit
		kernel at EL1. 
COMPAT_BINFMT_ELF
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support compat binary format elf.
COMPAT_OLD_SIGACTION
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] Enable kernel support compat old signal action.
	[function] 
CONFIGFS_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Configfs is a RAM-based filesystem that provides the
		   converse of sysfs's functionality. Where sysfs is a
		   filesystem-based view of kernel objects, configfs is
		   a filesystem-based manager of kernel objects, or
		   config_items.
CONTEXT_SWITCH_TRACER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Scheduler switch trace event
COREDUMP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable core dump support.
CORESIGHT
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle,sharklj1,whale2
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight architecture.
CORESIGHT_LINKS_AND_SINKS
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle,sharklj1,whale2,whalek
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight funnel/etf/etr
		   modules.
CORESIGHT_LINK_AND_SINK_TMC
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle,sharklj1,whale2,whalek
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight etb module.
CORESIGHT_SOURCE_ETM3X
	[arch] arm
	[plat] pike2,sharkl2
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight etm3x modules.
CORESIGHT_SOURCE_ETM4X
	[arch] arm64
	[plat] sharkj1,sharkle,whale2
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight etm4x modules.
CP15_BARRIER_EMULATION
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Emulate CP15 Barrier instructions.
CPUSETS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Let you create and manage CPUSETs which allow dynamically
			partitioning a system into sets of CPUs and Memory Nodes and
			assigning tasks to run only within those sets.
CPU_32v6K
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Support 32 CPU ARM V6.
CPU_32v7
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Support 32 CPU ARM V7.
CPU_ABRT_EV7
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Support CPU type ABRT EV7.
CPU_CACHE_V7
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make
	[subsys] core
	[must] console
	[function] Support cpu cache in V7 version.
CPU_CACHE_VIPT
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support VIPT(Virtual Index Physical Tag).
CPU_COPY_V6
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support CPU copy version V6.
CPU_CP15
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support CP15 processor.
CPU_CP15_MMU
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] code
	[subsys] core
	[must] console
	[function] Enable CP15 processor support MMU.
CPU_FREQ
	[arch] all
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable cpufreq
CPU_FREQ_DEFAULT_GOV_INTERACTIVE
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable interactive as default governor
CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
	[arch] all
	[plat] sharkl3
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable schedutil as default governor
CPU_FREQ_GOV_COMMON
	[arch] all
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] should be enabled if ondemand, conservation or sprdemand is enabled.
CPU_FREQ_GOV_INTERACTIVE
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable interactive as an available governor
CPU_FREQ_GOV_PERFORMANCE
	[arch] all
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable performance as an available governor
CPU_FREQ_GOV_POWERSAVE
	[arch] all
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable powersave as an available governor
CPU_FREQ_GOV_SCHEDUTIL
	[arch] all
	[plat] sharkl3
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable schedutil as an available governor
CPU_FREQ_GOV_SPRDEMAND
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] 
	[function] enable sprdemand as an available governor
CPU_FREQ_GOV_USERSPACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable userspace as an available governor
CPU_FREQ_STAT
	[arch] all
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] statistical information for dvfs
CPU_FREQ_STAT_DETAILS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] detail statistical information for dvfs
CPU_FREQ_TIMES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] debug
	[function] This driver exports CPU time-in-state information through procfs file system.
CPU_HAS_ASID
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support ASID.
CPU_IDLE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpuidle
	[must] console
	[function] CPU idle PM support.
CPU_IDLE_GOV_LADDER
	[arch] all
	[plat] all
	[field] make
	[subsys] cpuidle
	[must] console
	[function] Ladder governor (for periodic timer tick).
CPU_IDLE_GOV_MENU
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpuidle
	[must] user
	[function] Menu governor (for tickless system).
CPU_IDLE_GOV_SPRD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpuidle
	[must] user
	[function] cpuidle governor developed by sprd
CPU_PABRT_V7
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Support CPU type PABRT EV7.
CPU_PM
	[arch] all
	[plat] all_sp
	[field] make,code
	[subsys] power
	[must] user
	[function] cpu power management
CPU_RMAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] These functions maintain a mapping from CPUs to some ordered set of
			objects with CPU affinities.
CPU_THERMAL
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] This function is enabele relate thermal
CPU_TLB_V7
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support CPU TLB V7.
CPU_V7
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support ARM V7 processor.
CRC16
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC16 functions.
CRC32
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC32/CRC32c functions.
CRC32_SLICEBY8
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Slice by 8 bytes.
CRC7
	[arch] arm
	[plat] sharkle32,sharklefp
	[field] make
	[subsys] core
	[must] core
	[function] Support CRC7.
CRC_CCITT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support CRC-CCITT functions.
CRC_ITU_T
	[arch] arm
	[plat] sharkle32,sharklefp
	[field] make
	[subsys] core
	[must] console
	[function] CRC ITU-T V.41 functions.
CROSS_COMPILE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Cross-compiler tool prefix. Doesn't need it, set to "".
CROSS_MEMORY_ATTACH
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable process_vm_readv/writev syscalls.
CRYPTO
	[arch] all
	[plat] all
	[field] meun
	[subsys] security
	[must] user
	[function] Cryptographic API.
CRYPTO_ABLK_HELPER
	[arch] arm64 arm
	[plat] sharkle,sharkl3,sharklj1,pike2,sharkl2,sharkle32
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate the crypto need
CRYPTO_AEAD
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_AEAD2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_AES
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] AES cipher algorithms.
CRYPTO_AES_ARM
	[arch] arm
	[plat] sharkl2 sharkle32 pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] AES digest algorithm (ARM-asm)
CRYPTO_AES_ARM64_CE
	[arch] arm64
	[plat] sharkl3,sharkl5,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] AES core cipher using ARMv8 Crypto Extensions.
CRYPTO_AES_ARM64_CE_BLK
	[arch] arm64
	[plat] sharkl3,sharkle,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES in ECB/CBC/CTR/XTS modes using ARMv8 Crypto Extensions.
CRYPTO_AES_ARM64_CE_CCM
	[arch] arm64
	[plat] sharkl3,sharkle,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES in CCM mode using ARMv8 Crypto Extensions.
CRYPTO_AES_ARM64_NEON_BLK
	[arch] arm64
	[plat] sharkle,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES in ECB/CBC/CTR/XTS modes using NEON instructions.
CRYPTO_AES_ARM_BS
	[arch] arm
	[plat] sharkl2 sharkle32 pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] Bit sliced AES using NEON instructions
CRYPTO_AES_ARM_CE
	[arch] arm
	[plat] sharkle32
	[field] make
	[subsys] crypto
	[must] none
	[function] Accelerated AES using ARMv8 Crypto Extensions
CRYPTO_AKCIPHER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CRYPTO_AKCIPHER2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CRYPTO_ALGAPI
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CRYPTO_ALGAPI2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CRYPTO_ANSI_CPRNG
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Pseudo Random Number Generation for Cryptographic modules.
CRYPTO_ARC4
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] ARC4 cipher algorithm.
CRYPTO_AUTHENC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Authenc support.
CRYPTO_BLKCIPHER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_BLKCIPHER2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_CBC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] CBC support.
CRYPTO_CMAC
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "CMAC support"(Cipher-based Message Authentication Code).
CRYPTO_CRC32
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] CRC32 CRC algorithm.
CRYPTO_CRC32C
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] console
	[function] CRC32c CRC algorithm.
CRYPTO_CRC32_ARM64
	[arch] arm64
	[plat] sharkl3,sharkle
	[field] make
	[subsys] crypto
	[must] console
	[function] CRC32c CRC algorithm for ARM64.
CRYPTO_CRYPTD
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] Cryptographic API
CRYPTO_CTR
	[arch] all
	[plat] sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "CTR support"(Counter mode).
CRYPTO_CTS
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "CTS support"(Cipher Text Stealing).
CRYPTO_DEFLATE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] crypto
	[must] console
	[function] Deflate compression algorithm.
CRYPTO_DES
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] DES and Triple DES EDE cipher algorithms.
CRYPTO_DRBG
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_DRBG_HMAC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_DRBG_MENU
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] NIST SP800-90A DRBG.
CRYPTO_ECB
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] ECB support.
CRYPTO_ECHAINIV
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Encrypted Chain IV Generator.
CRYPTO_GCM
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] GCM/GMAC support
		If don't enable this config, the phone will have the internal problem.
CRYPTO_GF128MUL
	[arch] all
	[plat] sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] Efficient table driven implementation of multiplications in the field GF(2^128).
CRYPTO_GHASH
	[arch] arm64.arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] GHASH digest algorithm
CRYPTO_GHASH_ARM64_CE
	[arch] arm64
	[plat] sharkl3,sharkl5,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] GHASH (for GCM chaining mode) using ARMv8 Crypto Extensions.
CRYPTO_GHASH_ARM_CE
	[arch] arm
	[plat] sharkle32
	[field] make
	[subsys] crypto
	[must] none
	[function] PMULL-accelerated GHASH using ARMv8 Crypto Extensions
CRYPTO_HASH
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_HASH2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_HASH_INFO
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] hash info symbol
CRYPTO_HEH
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "HEH support"(Hash-Encrypt-Hash mode).
CRYPTO_HMAC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] HMAC support.
CRYPTO_HW
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Hardware crypto devices.
CRYPTO_JITTERENTROPY
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Jitterentropy Non-Deterministic Random Number Generator.
CRYPTO_LZO
	[arch] all
	[plat] isharkl2,sharkle,sharkl3,sharklJ1
	[field] make
	[subsys] crypto
	[must] none
	[function] one compress algorithm
CRYPTO_MANAGER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Cryptographic algorithm manager.
CRYPTO_MANAGER2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_MANAGER_DISABLE_TESTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Disable run-time self tests.
CRYPTO_MD4
	[arch] arm64
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] MD4 digest algorithm
CRYPTO_MD5
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function]  MD5 digest algorithm.
CRYPTO_NULL
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Null algorithms。
CRYPTO_NULL2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_PCOMP2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_POLY_HASH_ARM64_CE
	[arch] arm64
	[plat] sharkl3,sharkle,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] poly_hash (for HEH encryption mode) using ARMv8 Crypto Extensions.
CRYPTO_RNG
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_RNG2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_RNG_DEFAULT
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_RSA
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] RSA algorithm
CRYPTO_SEQIV
	[arch] all
	[plat] sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] This IV generator generates an IV based on a sequence number by xoring it with a salt.
CRYPTO_SHA1
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] SHA1 digest algorithm.
CRYPTO_SHA1_ARM
	[arch] arm
	[plat] sharkl2 sharkle32 pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA1 digest algorithm (ARM-asm)
CRYPTO_SHA1_ARM64_CE
	[arch] arm64
	[plat] sharkl3,sharkl5,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] SHA-1 digest algorithm (ARMv8 Crypto Extensions).
CRYPTO_SHA1_ARM_CE
	[arch] arm
	[plat] sharkle32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA2 digest algorithm (ARM-crypto-extension)
CRYPTO_SHA1_ARM_NEON
	[arch] arm
	[plat] sharkl2 sharkle32 pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA1 digest algorithm (ARM NEON)
CRYPTO_SHA256
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] SHA224 and SHA256 digest algorithm.
CRYPTO_SHA256_ARM
	[arch] arm
	[plat] sharkl2 sharkle32 pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA256 digest algorithm (ARM-asm)
CRYPTO_SHA2_ARM64_CE
	[arch] arm64
	[plat] sharkl3,sharkl5,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] SHA-224/SHA-256 digest algorithm (ARMv8 Crypto Extensions).
CRYPTO_SHA2_ARM_CE
	[arch] arm
	[plat] sharkle32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA2 digest algorithm (ARM-crypto-extension)
CRYPTO_SHA512
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] SHA512 digest algorithm
		If don't enable this config, the phone will have the internal problem.
CRYPTO_SHA512_ARM
	[arch] arm
	[plat] sharkl2 sharkle32 pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA512 digest algorithm (ARM-asm)
CRYPTO_TWOFISH
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] make twofish driver to be compiled for sd card requirement.
CRYPTO_TWOFISH_COMMON
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] make twofish driver to be compiled for sd card requirement.
CRYPTO_WORKQUEUE
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CRYPTO_XCBC
	[arch] all
	[plat] sharkle
	[field] make
	[subsys] crypto
	[must] user
	[function] It is Keyed-Hashing with encryption algorithm,and is used
		   in vowifi.
CRYPTO_XTS
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "XTS support"(IEEE1619/D16 narrow block cipher use with aes-xts-plain,
		   key size 256, 384 or 512 bits).
CUSE
	[arch] all
	[plat] sll
	[field] menu make
	[subsys] fs
	[must] user
	[function] tristate "Character device in Userspace support".
DCACHE_WORD_ACCESS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Access dcache in word.
DEBUG_ATOMIC_SLEEP
	[arch] arm
	[plat] sharkle32,pike2
	[field] code
	[subsys] power
	[must] console
	[function] Sleep inside atomic section checking.
DEBUG_BUGVERBOSE
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] For debug bugverbose.
DEBUG_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] debug
	[function] Support Debug Filesystem.
DEBUG_GPIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] debug
	[function] Support gpio debug info
DEBUG_INFO
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable debug info.
DEBUG_KERNEL
	[arch] all
	[plat] all_sp
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable kernel debug.
DEBUG_LIST
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] make,code
	[subsys] debug
	[must] console
	[function] Enable this to turn on extended checks in the linked-list walking routines.
DEBUG_LL_INCLUDE
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] debug
	[must] console
	[function] Support for debug include path.
DEBUG_LOCK_ALLOC
	[arch] arm
	[plat] pike2,sharkle32
	[field] code
	[subsys] debug
	[must] console
	[function] Lock debugging: detect incorrect freeing of live locks.
DEBUG_MUTEXES
	[arch] arm
	[plat] sharkle32,pike2,sharklefp
	[field] code
	[subsys] debug
	[must] console
	[function] Mutex debugging: basic checks.
DEBUG_NOTIFIERS
	[arch] all
	[plat] all
	[field] code
	[subsys] debug
	[must] debug
	[function] for kernel debug notifiers
DEBUG_PREEMPT
	[arch] all
	[plat] all
	[field] code
	[subsys] debug
	[must] debug
	[function] for debug preempt
DEBUG_RODATA
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] kernel text and rodata will be made read-only. This
		is to help catch accidental or malicious attempts to change the
		kernel's executable code.
DEBUG_RT_MUTEXES
	[arch] arm
	[plat] pike2,sharkle32
	[field] make,code
	[subsys] debug
	[must] debug
	[function] RT Mutex debugging, deadlock detection.
DEBUG_SG
	[arch] arm
	[plat] sharkle32,pike2,sharklefp
	[field] code
	[subsys] debug
	[must] debug
	[function] Debug SG(scatter-gather) table operations.
DEBUG_SPINLOCK
	[arch] arm
	[plat] sharkle32,pike2
	[field] make,code
	[subsys] debug
	[must] debug
	[function] build SMP to catch missing spinlock initialization
		and certain other kinds of spinlock errors commonly made.  This is
		best used in conjunction with the NMI watchdog so that spinlock
		deadlocks are also debuggable.
DECOMPRESS_BZIP2
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Support bzip2 decompress format.
DECOMPRESS_GZIP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support kernel decompress gzip.
DECOMPRESS_LZMA
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Support lzma decompress format.
DEFAULT_CFQ
	[arch] all
	[plat] all
	[field] menu
	[subsys] block
	[must] busybox_console
	[function] default io scheduler strings "cfq".
DEFAULT_HOSTNAME
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Default hostname. Set to "(none)".
DEFAULT_HUNG_TASK_TIMEOUT
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] set value sysctl_hung_task_timeout_secs.
DEFAULT_IOSCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] block
	[must] busybox_console
	[function] default io scheduler config.
DEFAULT_MMAP_MIN_ADDR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Low address space to protect from user allocation.
DEFAULT_SECURITY
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] lsm
DEFAULT_SECURITY_SELINUX
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] vts require
DEFAULT_TCP_CONG
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] default algorithm of congestion control
DEFAULT_USE_ENERGY_AWARE
	[arch] arm,arm64
	[plat] sharkL3
	[field] code
	[subsys] sched
	[must] user
	[function] enable Energy Aware Scheduler
DEFCONFIG_LIST
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Set path of defconfig.
DETECT_HUNG_TASK
	[arch] all
	[plat] all_sp
	[field] code,make
	[subsys] core
	[must] debug
	[function] Detect hung task.
DETOUR_MEM
	[arch] all
	[plat] sharkle
	[field] make,code
	[subsys] mm
	[must] none
	[function] This function is used to reserve memory for uboot first
		   and free back to buddy with MIGRATE_DETOUR which can only
		   be allocted by the alloctor with MIGRATE_MOVABLE.
DEVFREQ_GOV_SIMPLE_ONDEMAND
	[arch] all
	[plat] all
	[field] code
	[subsys] devfreq
	[must] home
	[function] Support gpu dfs/dvfs logic.
DEVFREQ_GOV_SPRD_SCENE
	[arch] all
	[plat] sharkl3
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] Sprd govanor can selected by Sprd_auto_dfs driver.
		   Userspace set scene to this govanor and then govnor send freq
		   request to driver.
DEVFREQ_SPRD_AUTO_DFS
	[arch] all
	[plat] sharkl3
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] This function is used to enable ddr auto dfs function
		   on DDRC v1 and and later version
DEVFREQ_SPRD_DFS
	[arch] all
	[plat] whale2,iwhale2,sharkl2,isharkl2,sharkle,pike2
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] This function is used to enable ddr auto dfs function.
DEVTMPFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Maintain a devtmpfs filesystem to mount at /dev.
DEVTMPFS_MOUNT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Automount devtmpfs at /dev, after the kernel mounted the rootfs.
DIRECT_SWAPPINESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Allow to adjust direct reclaim swappiness.
DISP_PM_DOMAIN_SHARKL3
	[arch] arm64
	[plat] sharkl3
	[field] make
	[subsys] video
	[must] home
	[function] SPRD display PM Generic Domain for SharkL3
DMADEVICES
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support DMA devices.
DMA_API_DEBUG
	[arch] arm
	[plat] pike2,sharkle32
	[field] make,code
	[subsys] debug
	[must] debug
	[function] Enable debugging of DMA-API usage.
DMA_ENGINE
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support DMA engine.
DMA_OF
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support of DMA.
DMA_SHARED_BUFFER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support DMA share buffer.
DM_BUFIO
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] depends on BLK_DEV_DM, This interface allows you to do buffered I/O on a device
		   and acts as a cache, holding recently-read blocks in memory and performin delayed
		   writes.
DM_CRYPT
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on BLK_DEV_DM, This device-mapper target allows you to create a device that
		   transparently encrypts the data on it.
DM_UEVENT
	[arch] all
	[plat] sharkle
	[field] make
	[subsys] crypto
	[must] user
	[function] make DM driver to be compiled for sd card requirement.
DM_VERITY
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on BLK_DEV_DM, This device-mapper target creates a read-only device.
		   Verity target one function in The device mapper.
DM_VERITY_AVB
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on DM_VERITY, Enables Android Verified Boot platform-specific error behavior.
DM_VERITY_FEC
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on DM_VERITY, add forward error correction support to dm-verity.
DM_VERITY_HASH_PREFETCH_MIN_SIZE
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on DM_VERITY, This sets minimum number of hash blocks to prefetch for
DNOTIFY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Dnotify is a directory-based per-fd file change
		   notification system that uses signals to communicate
		   events to user-space.  There exist superior
		   alternatives, but some applications may still rely on
		   dnotify.
DNS_RESOLVER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] depends on NET && KEYS, support for the DNS Resolver key type
DQL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] The goal of dynamic queue limits (dql) is to set the queue limit, number of objects to the queue, to be minimized
		without allowing the queue to be starved.
DRM
	[arch] all
	[plat] iwhale2,sharkl3
	[field] make
	[subsys] gpu
	[must] home
	[function] Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)
DRM_BRIDGE
	[arch] all
	[plat] iwhale2,sharkl3
	[field] menu
	[subsys] gpu
	[must] home
	[function] Display Interface Bridges
DST_CACHE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for dst cache.
DTC
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support the device-tree-compiler.
DT_IDLE_STATES
	[arch] arm,arm64
	[plat] pike2,sharkle,sharkl3
	[field] make,code
	[subsys] cpuidle
	[must] user
	[function] This macro is used to open cpuidle and light sleep function.
DUAL_ROLE_USB_INTF
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support generic DUAL ROLE sysfs interface.
DUMMY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Dummy net driver support:This is essentially a bit-bucket device (i.e. traffic you send to
		this device is consigned into oblivion) with a configurable IP address.
DYNAMIC_DEBUG
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core,usb
	[must] debug
	[function] Enable/disalbe dynamic debug function.
DYNAMIC_FTRACE
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] core
	[must] user
	[function] Enable/disable function tracing dynamically.
EDAC
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] EDAC (Error Detection And Correction) reporting.
EDAC_ATOMIC_SCRUB
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support EDAC atomic scrub.
EDAC_LEGACY_SYSFS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] EDAC legacy sysfs.
EDAC_MM_EDAC
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] core
	[must] debug
	[function] Main Memory EDAC (Error Detection And Correction) reporting.
EDAC_SUPPORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support EDAC.
EFI_PARTITION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] depends on PARTITION_ADVANCED
ELF_CORE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable support for generating core dumps. Disabling saves about 4k.
EMBEDDED
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] user
	[function] vts require, Embedded system.
ENABLE_DEFAULT_TRACERS
	[arch] all
	[plat] all
	[field] make
	[subsys] trace
	[must] user
	[function] cts require, enable tracer config
ENABLE_MUST_CHECK
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable __must_check logic.
ENABLE_WARN_DEPRECATED
	[arch] arm,arm64
	[plat] pike2,sharkle32,sharkl2,sharkl3,sharkle
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable __deprecated logic.
ENCRYPTED_KEYS
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] make
	[subsys] security
	[must] none
	[function] tristate "ENCRYPTED KEYS"
ENHANCE_SMAPS_INFO
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] debug
	[function] Show more smaps info.
EPOLL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable eventpoll support.
EVENTFD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Enable eventfd() system call.
EVENT_TRACING
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] The main swtich butten for event ftrace.
EXFAT_FS
	[arch] all
	[plat] sharkle32
	[field] make
	[subsys] fs
	[must] uesr
	[function] This function is used enable exfat.
EXFAT_VIRTUAL_XATTR
	[arch] all
	[plat] sharkle32
	[field] code
	[subsys] fs
	[must] user
	[function] This used setting exfat xattr property.
EXFAT_VIRTUAL_XATTR_SELINUX_LABEL
	[arch] all
	[plat] sharkle32
	[field] code
	[subsys] fs
	[must] user
	[function] This used setting exfat selinux.
EXPERT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Configure standard kernel features (expert users).
EXT4_ENCRYPTION
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] menu
	[subsys] fs
	[must] none
	[function] Enable encryption of ext4 files and directories.
EXT4_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] busybox_console
	[function] ext4 filesystem
EXT4_FS_ENCRYPTION
	[arch] all
	[plat] isharkl2,sharkle,sharkl3
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable encryption of ext4 files and directories.
EXT4_FS_SECURITY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] Security labels support alternative access control
		   models implemented by security modules like SELinux.
		   This option enables an extended attribute handler for
		   file security labels in the ext4 filesystem.
EXT4_RESERVE_SPACE_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Support for reserve space black and white list filter
		   feature.
EXT4_USE_FOR_EXT2
	[arch] 
	[plat] 
	[field] 
	[subsys] 
	[must] 
	[function] 
EXTRA_FIRMWARE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] External firmware blobs to build into the kernel binary, Set to "".
E_SHOW_MEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] userdebug
	[function] Enhanced show memory.
F2FS_CHECK_FS
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Enable F2FS consistency checking feature.
F2FS_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Enable f2fs file system.
F2FS_FS_ENCRYPTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable encryption of f2fs files and directories.
F2FS_FS_SECURITY
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Enable F2FS Security Labels.
F2FS_FS_XATTR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Enable F2FS extended attributes.
F2FS_IO_TRACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] debug
	[function] Enable F2FS IO tracer.
F2FS_RESERVE_SPACE_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable f2fs reserve space.
F2FS_STAT_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Enable F2FS Status Information.
FAIR_GROUP_SCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Group scheduling for SCHED_OTHER
FANOTIFY
	[arch] all
	[plat] all
	[field] make,menu
	[subsys] fs
	[must] user
	[function] Enable encryption of f2fs files and directories.
FANOTIFY_ACCESS_PERMISSIONS
	[arch] all
	[plat] all
	[field] make,menu
	[subsys] fs
	[must] user
	[function] Filesystem wide access notification.
FAT_DEFAULT_CODEPAGE
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Value of fat_default_codepage config.
FAT_DEFAULT_IOCHARSET
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Fat fs default iocharset config.
FAT_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Fat filesystem.
FB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] vts function
FB_CMDLINE
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] framebuffer cmdline support and vts function
FGU_SC27XX
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to calculate battery cap
FIB_RULES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPv4 Forwarding Information Base: policy rules
FILE_LOCKING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] This option enables standard file locking support,
		   required for filesystems like NFS and for the flock()
		   system call.
FIRMWARE_IN_KERNEL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Include in-kernel firmware blobs in kernel binary.
FIX_EARLYCON_MEM
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] IF MMU, enable kernel support earlycon fixmap.
FLASH_RGB_SC2721
	[arch] arm
	[plat] shakle32
	[field] make
	[subsys] misc
	[must] unknown
	[function] compile flash rgb sc2721 driver
FLASH_SC2703
	[arch] arm64
	[plat] sharkL3
	[field] make
	[subsys] misc
	[must] unknown
	[function] compile flash sc2703 driver
FLASH_SC2721
	[arch] arm
	[plat] sharkle32
	[field] menu
	[subsys] misc
	[must] unknown
	[function] compile flash sc2721 driver
FLATMEM
	[arch] all
	[plat] pike2,sharkle32,sharklefp
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Memory model.
FLAT_NODE_MEM_MAP
	[arch] all
	[plat] pike2,sharkle32,sharklefp
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Flat memory.
FORCE_MAX_ZONEORDER
	[arch] all
	[plat] all
	[field] menu
	[subsys] video
	[must] home
	[function] Enable to allocate large continuous physical pages.
FRAME_POINTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Compile the kernel with frame pointers, kernel image will be slightly
		larger and slower, but it gives very useful debugging information in case of kernel bugs.
FRAME_WARN
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Warn for stack frames larger than (needs gcc 4.4).
FREEZER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] control user space processes and some kernel threads suspend
		   during hibernation or system-wide suspend
FSNOTIFY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] File status changed notify function
FS_ENCRYPTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable encryption of fs files and directories.
FS_MBCACHE
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] busybox_console
	[function] Meta block cache for Extended Attributes (ext2/ext3/
		   ext4).
FS_POSIX_ACL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] POSIX Access Control Lists (ACLs) support.
FTRACE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Tracers
FTRACE_MCOUNT_RECORD
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] Trace mcount record.
FTRACE_SYSCALLS
	[arch] all
	[plat] all_sp
	[field] code,make
	[subsys] core
	[must] debug
	[function] Trace syscalls.
FUNCTION_GRAPH_TRACER
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] Trace function graph.
FUNCTION_PROFILER
	[arch] arm,arm64
	[plat] pike2,sharkL3,sharkle
	[field] code
	[subsys] core
	[must] debug
	[function] Trace function profiler.
FUNCTION_TRACER
	[arch] all
	[plat] all_sp
	[field] code
	[subsys] core
	[must] debug
	[function] Enable/disable function tracer.
FUSE_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Fuse filesystem support.
FUTEX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Disabling this option will cause the kernel to be built without
		support for "fast userspace mutexes".  The resulting kernel may not
		run glibc-based applications correctly.
FW_LOADER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Userspace firmware loading support.
FW_LOADER_USER_HELPER
	[arch] all
	[plat] sharkle,sharkle32,sharkl3,pike2
	[field] code
	[subsys] core
	[must] console
	[function] select by FW_LOADER_USER_HELPER_FALLBACK.
FW_LOADER_USER_HELPER_FALLBACK
	[arch] all
	[plat] sharkle,sharkle32,sharkl3,pike2
	[field] code
	[subsys] core
	[must] console
	[function] This option enables / disables the invocation of user-helper
		(e.g. udev) for loading firmware files as a fallback after the
		direct file loading in kernel fails.
GENERIC_ALLOCATOR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Kernel support the generic allocator.
GENERIC_BUG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] console
	[function] Generic support for BUG().
GENERIC_BUG_RELATIVE_POINTERS
	[arch] arm64,x86
	[plat] all
	[field] make,code
	[subsys] debug
	[must] console
	[function] use 32-bit pointers relative to the containing
		struct bug_entry for bug_addr and file.
GENERIC_CALIBRATE_DELAY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support default delay calibration.
GENERIC_CLOCKEVENTS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] console
	[function] Enable kernel support generic clock event.
GENERIC_CLOCKEVENTS_BROADCAST
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] console
	[function] Clockevents broadcasting infrastructure.
GENERIC_CPU_AUTOPROBE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support cpu auto probe.
GENERIC_CSUM
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Enalbe kernel support checksum.
GENERIC_EARLY_IOREMAP
	[arch] all
	[plat] sharkl3,sharkle
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Temporary boot-time mappings.
GENERIC_HWEIGHT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support hamming weight of a N-bit word.
GENERIC_IDLE_POLL_SETUP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support generic idle poll.
GENERIC_IO
	[arch] all
	[plat] all
	[field] menu
	[subsys] block
	[must] user
	[function] Generic IO.
GENERIC_IRQ_MIGRATION
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] interrupt
	[must] console
	[function] Enable kernel support irq migration.
GENERIC_IRQ_PROBE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support generic irq probe.
GENERIC_IRQ_SHOW
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Use the generic /proc/interrupts implementation.
GENERIC_IRQ_SHOW_LEVEL
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32,sharkle,sharkl3,sharklj1
	[field] code
	[subsys] core
	[must] console
	[function] Print level/edge extra information.
GENERIC_MSI_IRQ
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic MSI interrupt support. Select by PCI_MSI.
GENERIC_MSI_IRQ_DOMAIN
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic MSI hierarchical interrupt domain support.
		   Select by PCI_MSI_IRQ_DOMAIN.
GENERIC_NET_UTILS
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support net utils.
GENERIC_PCI_IOMAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support pci iomap.
GENERIC_PINCONF
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Generic pin configuration support.
GENERIC_SCHED_CLOCK
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharkle32,sharkle,sharkl3,sharklj1
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support the generic sched clock.
GENERIC_SMP_IDLE_THREAD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support smp idle.
GENERIC_STRNCPY_FROM_USER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support strncpy from user.
GENERIC_STRNLEN_USER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support strnlen from user.
GENERIC_TIME_VSYSCALL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] soc
	[must] user
	[function] select by others.
GENERIC_TRACER
	[arch] all
	[plat] all_sp
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable/disalbe generic tracer.
GPIOLIB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
GPIO_DEVRES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
GPIO_GENERIC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
GPIO_GENERIC_PLATFORM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
GPIO_SPRD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
GPIO_SPRD_PMIC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic pmic gpio support
GPIO_SYSFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio sysfs support
HANDLE_DOMAIN_IRQ
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Support the handle of irq domain.
HARDENED_USERCOPY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] user
	[function] vts require, Harden memory copies between kernel and userspace
HARDIRQS_SW_RESEND
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Support hardware irqs resend by software.
HARDLOCKUP_DETECTOR
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Enable kernel hard lockup.
HARDLOCKUP_DETECTOR_OTHER_CPU
	[arch] arm,arm64
	[plat] sharkle,pike2,sharkL3
	[field] code
	[subsys] core
	[must] debug
	[function] Detect other cpu when harklockup.
HAS_DMA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] DMA-coherent buffers.
HAS_IOMEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] busybox_console
	[must] Provide a facility for active usages of device memory to block pmem device unbind.
	[function] 
HAS_IOPORT_MAP
	[arch] arm
	[plat] pike2,sharkle32,sharkl2,roc1
	[field] make,code
	[subsys] core
	[must] console
	[function] Support standard I/O routines.
HAVE_ALIGNED_STRUCT_PAGE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enalbe the struct aligned with page.
HAVE_ARCH_AUDITSYSCALL
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] console
	[function] avc audit
HAVE_ARCH_BITREVERSE
	[arch] arm,arm64
	[plat] pike2,sharkle32,sharkl2,sharkl3,sharkle
	[field] code
	[subsys] core
	[must] console
	[function] Support kernel has ablity  of arch bit reverse.
HAVE_ARCH_HARDENED_USERCOPY
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enalbe kernel has ablity of hardened usercopy.
HAVE_ARCH_HUGE_VMAP
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enalbe kernel has ablity of huge virtual map.
HAVE_ARCH_JUMP_LABEL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support JUMP_LABEL which
			Optimize very unlikely/likely branches.
HAVE_ARCH_KASAN
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support KASAN.
HAVE_ARCH_KGDB
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support gdb.
HAVE_ARCH_MMAP_RND_BITS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] An arch should select this symbol if it supports setting a variable
		number of bits for use in establishing the base address for mmap
		allocations, has MMU enabled and provides values for both:
		ARCH_MMAP_RND_BITS_MIN & ARCH_MMAP_RND_BITS_MAX.
HAVE_ARCH_MMAP_RND_COMPAT_BITS
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] An arch should select this symbol if it supports running applications
		in compatibility mode, supports setting a variable number of bits for
		use in establishing the base address for mmap allocations, has MMU
		enabled and provides values for both:
		ARCH_MMAP_RND_COMPAT_BITS_MIN & ARCH_MMAP_RND_COMPAT_BITS_MAX.
HAVE_ARCH_PFN_VALID
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Memblock related configuration.
HAVE_ARCH_SECCOMP_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] An arch should select this symbol if it provides more system call.
HAVE_ARCH_TRACEHOOK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support trace hook.
HAVE_ARCH_TRANSPARENT_HUGEPAGE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] menu
	[subsys] mm
	[must] console
	[function] Enable kernel has ability of Transparent Hugepages.
HAVE_ARM_ARCH_TIMER
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Architected timer support.
HAVE_ARM_SMCCC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support ARM SMC Calling Convention.
HAVE_BPF_JIT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Berkeley Packet Filter filtering capabilities are normally handled
		by an interpreter. This option allows kernel to generate a native
		code when filter is loaded in memory. This should speedup
		packet sniffing (libpcap/tcpdump).
HAVE_CC_STACKPROTECTOR
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] An arch should select this symbol if:
		- its compiler supports the -fstack-protector option
		- it has implemented a stack canary (e.g. __stack_chk_guard)
HAVE_CLK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] The <linux/clk.h> calls support software clock gating and
			thus are a key power management tool on many systems.
HAVE_CLK_PREPARE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Some clocks need do some preparation, this macro allows
			driver to implement the clk_prepare() interface.
HAVE_CMPXCHG_DOUBLE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel has ablity of cmpxchg_double().
HAVE_CMPXCHG_LOCAL
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel has ablity of cmpxchg().
HAVE_CONTEXT_TRACKING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Provide kernel/user boundaries probes necessary for subsystems.
HAVE_C_RECORDMCOUNT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for C record mcount. Don't need enable on feature phone.
HAVE_DEBUG_BUGVERBOSE
	[arch] arm64
	[plat] sharkl3,sharklj1
	[field] menu
	[subsys] core
	[must] console
	[function] Have function of debug bugverbose.
HAVE_DEBUG_KMEMLEAK
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Kmemleak detects memory leaks.
HAVE_DMA_API_DEBUG
	[arch] all
	[plat] all
	[field] menu
	[subsys] debug
	[must] debug
	[function] Enable kernel support DMA_API_DEBUG (debugging of DMA-API usage).
HAVE_DMA_ATTRS
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Get/set a specific attribute.
HAVE_DMA_CONTIGUOUS
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] DMA Contiguous Memory Allocator depends on HAVE_DMA_CONTIGUOUS.
HAVE_DYNAMIC_FTRACE
	[arch] all
	[plat] all_sp
	[field] menu
	[subsys] core
	[must] debug
	[function] If platform have dynamic ftrace function.
HAVE_EBPF_JIT
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] menu
	[subsys] core
	[must] console
	[function] Support Extended Berkeley Packet Filter Just In Time.
HAVE_EFFICIENT_UNALIGNED_ACCESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Some architectures are unable to perform unaligned accesses
			without the use of get_unaligned/put_unaligned.
HAVE_EXIT_THREAD
	[arch] arm
	[plat] pike2,sharkle32,sharklefp
	[field] code
	[subsys] core
	[must] console
	[function] An architecture implements exit_thread.
HAVE_FTRACE_MCOUNT_RECORD
	[arch] all
	[plat] all_sp
	[field] menu
	[subsys] core
	[must] debug
	[function] Platform have ftrace of mcount record.
HAVE_FUNCTION_GRAPH_TRACER
	[arch] all
	[plat] all_sp
	[field] menu
	[subsys] core
	[must] debug
	[function] Have graph function tracer.
HAVE_FUNCTION_TRACER
	[arch] all
	[plat] all_sp
	[field] menu
	[subsys] core
	[must] debug
	[function] Have function tracer.
HAVE_FUTEX_CMPXCHG
	[arch] arm
	[plat] pike2,sharkle32,sharklefp
	[field] code
	[subsys] core
	[must] console
	[function] Architectures should select this if futex_atomic_cmpxchg_inatomic()
		is implemented and always working. This removes a couple of runtime checks.
HAVE_GENERIC_DMA_COHERENT
	[arch] all
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Dma allocator.
HAVE_GENERIC_RCU_GUP
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Support RCU fast_gup.
HAVE_HARDENED_USERCOPY_ALLOCATOR
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel has ability of hardened usercopy allocator.
HAVE_HW_BREAKPOINT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support the hardware breakpoint.
HAVE_IRQ_TIME_ACCOUNTING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Archs need to ensure they use a high enough resolution clock to
			support irq time accounting and then call enable_sched_clock_irqtime().
HAVE_KERNEL_GZIP
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_GZIP.
HAVE_KERNEL_LZ4
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_LZ4.
HAVE_KERNEL_LZMA
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_LZMA.
HAVE_KERNEL_LZO
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_LZO.
HAVE_KERNEL_XZ
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_XZ.
HAVE_KPROBES
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_XZ.
HAVE_KRETPROBES
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel support KRETPROBES item.
HAVE_MEMBLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Early memory allocators memblock.
HAVE_MEMORY_PRESENT
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Control the implementation of memory_present () function.
HAVE_MOD_ARCH_SPECIFIC
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable the arch uses struct mod_arch_specific to store data.
HAVE_NET_DSA
	[arch] all
	[plat] all
	[field] meun
	[subsys] net
	[must] user
	[function] Support for the hardware switches supported by the Distributed Switch Architecture.
HAVE_OPROFILE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support OPROFILE which OProfile system profiling.
HAVE_OPTPROBES
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support OPTPROBES item.
HAVE_PATA_PLATFORM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] ata
	[must] user
	[function]  ARCH_VEXPRESS and ARCH_RPC platform support
HAVE_PERF_EVENTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support Kernel performance events and counters
HAVE_PERF_REGS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support selective register dumps for perf events.
HAVE_PERF_USER_STACK_DUMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support user stack dumps for perf event samples.
HAVE_PROC_CPU
	[arch] arm
	[plat] pike2,sharkl2,sharke32
	[field] menu
	[subsys] core
	[must] console
	[function] proc/cpu的支持,selcet by PROC_FS.
HAVE_RCU_TABLE_FREE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Support rcu table free.
HAVE_REGS_AND_STACK_ACCESS_API
	[arch] arm,x86
	[plat] pike2,sharke32,sharkl2,isharkl2
	[field] menu
	[subsys] core
	[must] console
	[function] This symbol should be selected by an architecure if it supports
			the API needed to access registers and stack entries.
HAVE_SMP
	[arch] arm
	[plat] pike2,sharkl2,sharke32
	[field] code
	[subsys] core
	[must] console
	[function] This option should be selected by machines which have an SMP-capable CPU.
HAVE_SYSCALL_TRACEPOINTS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] core
	[must] debug
	[function] Platform support syscall tracepoints.
HAVE_UID16
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support UID item which enable 16-bit UID system calls.
HAVE_VIRT_CPU_ACCOUNTING_GEN
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] With VIRT_CPU_ACCOUNTING_GEN, cputime_t becomes 64-bit.
		Before enabling this option, arch code must be audited to ensure there are
		no races in concurrent read/write of cputime_t.
HDMI
	[arch] all
	[plat] iwhale2,sharkl3
	[field] make
	[subsys] gpu
	[must] home
	[function] HDMI display support
HID
	[arch] all
	[plat] all
	[field] menu
	[subsys] input
	[must] user
	[function] human interface device support
HIDRAW
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] raw hid device support
HID_GENERIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Generic HID driver
HIGHMEM
	[arch] all
	[plat] pike2,sharkle32,sharklefp
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] High Memory Support.
HIGHPTE
	[arch] all
	[plat] isharkl2,iwhale2,pike2,sharkl3,sharklj1,sharkle,sharkle32,whale2
	[field] make,code
	[subsys] mm
	[must] user
	[function] Allocate 2nd-level pagetables from highmem.
HIGH_RES_TIMERS
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] vts require, High Resolution Timer Support.
HOTPLUG_CPU
	[arch] arm,arm64
	[plat] sharkl2,sharkle,sharkle32,sharklep,pike2,sharkl3
	[field] menu,code
	[subsys] cpuhotplug
	[must] user
	[function] Enable arm/arm64 cpuhotplug/SMP function
HUGETLBFS
	[arch] all
	[plat] isharkl2,sharkl3,sharklj1
	[field] make,code
	[subsys] fs
	[must] user
	[function] Hugetlbpage support.
HUGETLB_PAGE
	[arch] all
	[plat] isharkl2,sharkl3,sharklj1
	[field] make,code
	[subsys] fs
	[must] user
	[function] Hugetlbpage support.
HWSPINLOCK
	[arch] all
	[plat] all
	[field] menu
	[subsys] hwspinlock
	[must] home
	[function] support Hardware Spinlock device.
HWSPINLOCK_SPRD
	[arch] all
	[plat] all
	[field] menu
	[subsys] hwspinlock
	[must] home
	[function] support the Spreadtrum Hardware Spinlock device.
HW_PERF_EVENTS
	[arch] all
	[plat] sharkle,sharkl3,sharkle32,sharklefp
	[field] menu
	[subsys] interrupt
	[must] console
	[function] Enable hardware performance counter support for perf events
HZ
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] HZ must be set for different plat.
HZ_100
	[arch] all
	[plat] isharkl2,sharkl2,sharklj1,sharkle,sharkle32,sharklep,pike2
	[field] menu
	[subsys] time
	[must] console
	[function] All product on sprd plat used HZ_100 unless sharkl3.
HZ_250
	[arch] all
	[plat] sharkL3
	[field] menu
	[subsys] time
	[must] console
	[function] HZ_250 showes good interactive responsiveness on sprd plat
HZ_FIXED
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] menu
	[subsys] clock
	[must] console
	[function] Set the fixed HZ.
I2C
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] android_console
	[function] I2C support.
I2C_ALGOBIT
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] I2C bit-banging interfaces
I2C_BOARDINFO
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] I2C boardinfo interface
I2C_CHARDEV
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] Use i2c-* device files
I2C_COMPAT
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] User-space package which expects i2c adapters to be class devices
I2C_HELPER_AUTO
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] Some I2C bus drivers require so-called "I2C algorithm" modules
I2C_SPRD
	[arch] all
	[plat] whale2
	[field] menu
	[subsys] i2c
	[must] user
	[function] Enable i2c that support hw channel
I2C_SPRD_V2
	[arch] all
	[plat] sharkle,sharkl2,sharklj1,pike2,sharkl5,sharkl3,isharkl2,iwhale2
	[field] make
	[subsys] i2c
	[must] user
	[function] Enable i2c r8p0 that support hw channel
I2C_SPRD_V3
	[arch] all
	[plat] sharkl3
	[field] make
	[subsys] i2c
	[must] none
	[function] Enable i2c r9p0 that support hw channel
IIO
	[arch] all
	[plat] sharkl3, isharkl2
	[field] make
	[subsys] iio
	[must] user
	[function] enable industrial io system built in kernel
IIO_BUFFER
	[arch] all
	[plat] sharkl3, isharkl2
	[field] make
	[subsys] iio
	[must] user
	[function] iio buffer interface
IIO_CONSUMERS_PER_TRIGGER
	[arch] all
	[plat] sharkl3, isharkl2
	[field] make, code
	[subsys] iio
	[must] user
	[function] use in iio trigger module
IIO_KFIFO_BUF
	[arch] all
	[plat] sharkl3, isharkl2
	[field] make
	[subsys] iio
	[must] user
	[function] iio fifo interface
IIO_TRIGGER
	[arch] all
	[plat] sharkl3, isharkl2
	[field] make
	[subsys] iio
	[must] user
	[function] iio trigger interface
IKCONFIG
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] user
	[function] vts require, Kernel .config support
IKCONFIG_PROC
	[arch] all
	[plat] all
	[field] code
	[subsys] debug
	[must] user
	[function] vts require, Enable access to .config through /proc/config.gz
ILLEGAL_POINTER_VALUE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Defined the invailed point value.
INET
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, support for TCP/IP networking
INET6_AH
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, support for ipv6 IPsec AH
INET6_ESP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, Support for ipv6 IPsec ESP
INET6_IPCOMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, Support for IP Payload Compression Protocol (IPComp) (RFC3173) of ipv6,
INET6_TUNNEL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support for IPv6-in-IPv6 and IPv4-in-IPv6 tunnels described in RFC 2473.
INET6_XFRM_MODE_BEET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec BEET mode.
INET6_XFRM_MODE_TRANSPORT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec transport mode.
INET6_XFRM_MODE_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for ipv6 IPsec tunnel mode.
INET6_XFRM_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] supoort for ipv6 tunnel
INET_AH
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] It is AH transformation, it supports for IPsec AH.
INET_DIAG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for INET (TCP, DCCP, etc) socket monitoring interface used by
		native Linux tools such as ss. ss is included in iproute2
INET_DIAG_DESTROY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, allow privileged process to administratively close sockets
INET_ESP
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Support for IPsec ESP.
INET_IPCOMP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] It is IPComp transformation, supports for IP Payload
		  Compression Protocol (IPComp) (RFC3173), typically
		  needed for IPsec.
INET_TCP_DIAG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for INET TCP socket monitoring interface used by
		native Linux tools such as ss.
INET_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for tunnel
INET_UDP_DIAG
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support for UDP socket monitoring interface used by
		  the ss tool.
INET_XFRM_MODE_BEET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec BEET mode.
INET_XFRM_MODE_TRANSPORT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec transport mode.
INET_XFRM_MODE_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Support for IPsec tunnel mode.
INET_XFRM_TUNNEL
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] It supports IPsec tunnel mode.
INITRAMFS_SOURCE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Initramfs source file(s). Set to "".
INIT_ENV_ARG_LIMIT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Maximum of each of the number of arguments and environment
		variables passed to init from the kernel command line.
INOTIFY_USER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Inotify support for userspace.
INPUT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Generic input layer (needed for keyboard, mouse, ...)
INPUT_AKM09911
	[arch] all
	[plat] sharkle, sharklep
	[field] make
	[subsys] input
	[must] user
	[function] enable sensor akm099xx driver compile into software
INPUT_EVDEV
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] event interface
INPUT_FINGERPRINT
	[arch] all
	[plat] isharkl2,iwhale2,sharkl2,sharklj1,sharkle,sharkle32,sharklep,pike2,sharkl3
	[field] menu
	[subsys] input
	[must] none
	[function] enable fingerprint driver build in kernel
INPUT_GPIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] GPIO driver support
INPUT_JOYSTICK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Joystick interface
INPUT_KEYBOARD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Keyboards support
INPUT_KEYCHORD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Key chord input driver support
INPUT_KEYCOMBO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Key combo
INPUT_KEYRESET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] if you want to reboot when some keys are pressed
INPUT_LEDS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Export input device LEDs in sysfs
INPUT_LIS2DH
	[arch] all
	[plat] pike2
	[field] make
	[subsys] input
	[must] user
	[function] enable sensor LIS2DH driver compile into software
INPUT_LIS2DH_I2C
	[arch] all
	[plat] pike2
	[field] make
	[subsys] input
	[must] user
	[function] enable sensor LIS2DH i2c driver compile into software
INPUT_LIS2DH_SPI
	[arch] all
	[plat] pike2
	[field] make
	[subsys] input
	[must] none
	[function] enable accelerometer sensor LIS2DH/LIS2DH12 driver built in kernel
INPUT_LTR558_I2C
	[arch] all
	[plat] pike2, sharkle, sharklep
	[field] make
	[subsys] input
	[must] none
	[function] enable ambient light/proximity sensor LTR558/LTR553 driver built in kernel
INPUT_MATRIXKMAP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Matrix keymap support library
INPUT_MISC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Miscellaneous devices
INPUT_MOUSEDEV
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Mouse interface
INPUT_MOUSEDEV_SCREEN_X
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] input
	[must] unknown
	[function] Horizontal screen resolution
INPUT_MOUSEDEV_SCREEN_Y
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] input
	[must] unknown
	[function] Vertical screen resolution
INPUT_TOUCHSCREEN
	[arch] all
	[plat] all
	[field] menu
	[subsys] input
	[must] user
	[function] touchscreen drivers
INPUT_UINPUT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] input
	[must] user
	[function] This macro is to open  node.  The node is used by  Bluetooth headset.
INTEGRATED_MARLIN2_GE2
	[arch] arm,arm64
	[plat] sharkle32,sharkle,pike2
	[field] make,code
	[subsys] misc
	[must] user
	[function] This function is used to enable
		   integrated marlin2/ge2 driver for wcn sys.
INTEGRATED_MARLIN2_GE2_SOC
	[arch] arm,arm64
	[plat] sharkle32,sharkle,pike2
	[field] make,code
	[subsys] misc
	[must] user
	[function] This function is used to enable
		   integrated marlin2/ge2 soc driver for wcn sys.
INTEGRITY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] console
	[function] This function is used to enable the integrity subsystem.
INTEGRITY_AUDIT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] console
	[function] This function is used to enable integrity auditing support.
IODEBUG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] debug
	[function] This function support for IO debug feature.
		   It provides a methd to acquire FS-IO operation
		   information.
IODEBUG_BDI
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] debug
	[function] This function is for IO debug in BDI.
		   For backing dev information.It provides a node bdi_iodebug
		   in /sys/kernel/debug/iodebug,userspace programe can use
		   this node to get backing dev information.
IODEBUG_VFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] debug
	[function] This function is for IO debug in VFS.
		   It can monitor vfs_read and vfs_write usage time.
		   It provides a node vfs_iodebug in
		   /sys/kernel/debug/iodebug, userspace programe can use
		   this node to get VFS operation information.
IOMMU_HELPER
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make
	[subsys] core
	[must] console
	[function] Support iommu for help.
ION
	[arch] all
	[plat] all
	[field] make
	[subsys] ion
	[must] home
	[function] An memory allocator for android.
ION_CLEAR_CARVEOUT
	[arch] all
	[plat] sharkl3
	[field] make,code
	[subsys] ion
	[must] user
	[function] This function is used to zero buffer from carveout
		   heap when allocated.
ION_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] ion
	[must] home
	[function] This macro is to enable sprd-specific ion features.
IOSCHED_CFQ
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] busybox_console
	[function] CFQ I/O scheduler.
IOSCHED_NOOP
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] user
	[function] No-op I/O scheduler.
IP6_NF_FILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, support for packet filtering
IP6_NF_IPTABLES
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, IP6 tables support
IP6_NF_MANGLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `mangle' table to iptables: see the man page for
		iptables(8).  This table is used for various packet alterations
		which can effect how the packet is routed.
IP6_NF_MATCH_EUI64
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This module performs checking on the IPv6 source address
		  Compares the last 64 bits with the EUI64 (delivered from\
		  the MAC address) address.
IP6_NF_MATCH_RPFILTER
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option allows you to match packets whose replies
		  would go out via the interface the packet came in.
IP6_NF_NAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This enables the `nat' table in ip6tables. This allows masquerading,
		port forwarding and other forms of full Network Address Port Translation.
IP6_NF_RAW
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `raw' table to ip6tables. This table is the very
		first in the netfilter framework and hooks in at the PREROUTING and OUTPUT chains.
IP6_NF_SECURITY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `security' table to iptables, for use with Mandatory Access Control (MAC) policy.
IP6_NF_TARGET_HL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This is a backwards-compatible option for the user's
		  convenience (e.g. when running oldconfig). It selects
		  CONFIG_NETFILTER_XT_TARGET_HL.
IP6_NF_TARGET_MASQUERADE
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Masquerading is a special case of NAT: all outgoing
		  connections are changed to seem to come from a
		  particular interface's address, and if the interface
		  goes down, those connections are lost.
IP6_NF_TARGET_NPT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds the `SNPT' and `DNPT' target, which
		  perform stateless IPv6-to-IPv6 Network Prefix
		  Translation per RFC 6296.
IP6_NF_TARGET_REJECT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, The REJECT target allows a filtering rule to specify that an ICMPv6
		error should be issued in response to an incoming packet, rather than silently being dropped.
IP6_NF_TARGET_SYNPROXY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This enables the `nat' table in ip6tables.
		  This allows masquerading, port forwarding and other
		  forms of full Network Address Port Translation.
IP6_NF_VOWIFI_DEC_TCPDUMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] debug
	[function] This enables dumping original packets in xfrm module.
		   It is for debug vowifi module.
IPV6
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require,support for ipv6
IPV6_MIP6
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Support for IPv6 Mobility described in RFC 3775.
IPV6_MULTIPLE_TABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,  Support multiple routing tables.
IPV6_NDISC_NODETYPE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Router type: cross-layer information from link-layer to
		IPv6 layer reported by certain link types (e.g., RFC4214).
IPV6_OPTIMISTIC_DAD
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require,This is experimental support for optimistic Duplicate
		Address Detection.  It allows for autoconfigured addresses
		to be used more quickly.
IPV6_ROUTER_PREF
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require,IPv6: Router Preference (RFC 4191) support
IPV6_ROUTE_INFO
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, This is experimental support of Route Information.
IPV6_SIT
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] This driver implements encapsulation of IPv6
		into IPv4 packets. This is useful if you want to connect two IPv6
		networks over an IPv4-only path.
IPV6_SUBTREES
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] IPv6: source address based routing
IPV6_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Support for IPv6-in-IPv6 and IPv4-in-IPv6 tunnels described in RFC 2473.
IPV6_VTI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function]  This can be used with xfrm mode tunnel to give
		the notion of a secure tunnel for IPSEC and then use routing protocol
		on top.
		If don't enable this config, the phone will have the internal problem.
IP_ADVANCED_ROUTER
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, If you intend to run your Linux box mostly as a router, i.e. as a
		computer that forwards and redistributes network packets, say Y; you
		will then be presented with several options that allow more precise
		control about the routing process.
IP_MULTICAST
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, This is code for addressing several networked computers at once,
		enlarging your kernel by about 2 KB. You need multicasting if you
		intend to participate in the MBONE, a high bandwidth network on top
		of the Internet which carries audio and video broadcasts.
IP_MULTIPLE_TABLES
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Normally, a router decides what to do with a received packet based
		solely on the packet's final destination address. If you say Y here,
		the Linux router will also be able to take the packet's source
		address into account. Furthermore, the TOS (Type-Of-Service) field
		of the packet can be used for routing decisions as well.
IP_NF_ARPFILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, ARP packet filtering defines a table `filter', which has a series of
		rules for simple ARP packet filtering at local input and
		local output.  On a bridge, you can also specify filtering rules
		for forwarded ARP packets. See the man page for arptables(8).
IP_NF_ARPTABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, arptables is a general, extensible packet identification framework.
		The ARP packet filtering and mangling (manipulation)subsystems
		use this: say Y or M here if you want to use either of those.
IP_NF_ARP_MANGLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Allows altering the ARP packet payload: source and destination
		hardware and network addresses.
IP_NF_FILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Packet filtering defines a table `filter', which has a series of
		rules for simple packet filtering at local input, forwarding and
		local output.  See the man page for iptables(8).
IP_NF_IPTABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IP tables support (required for filtering/masq/NAT)
IP_NF_MANGLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `mangle' table to iptables: see the man page for
		iptables(8).  This table is used for various packet alterations
		which can effect how the packet is routed.
IP_NF_MATCH_AH
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This match extension allows you to match a range of SPIs
		  inside AH header of IPSec packets. 2. vts require
IP_NF_MATCH_ECN
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This is a backwards-compat option for the user's
		  convenience(e.g. when running oldconfig). 2. vts require
IP_NF_MATCH_RPFILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This option allows you to match packets whose replies would
		go out via the interface the packet came in.
IP_NF_MATCH_TTL
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This is a backwards-compat option for the user's convenience
		  (e.g. when running oldconfig). 2. vts require
IP_NF_NAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This enables the `nat' table in iptables. This allows masquerading,
		port forwarding and other forms of full Network Address Port Translation.
IP_NF_RAW
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `raw' table to iptables. This table is the very
		first in the netfilter framework and hooks in at the PREROUTING and OUTPUT chains.
IP_NF_SECURITY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `security' table to iptables, for use
		with Mandatory Access Control (MAC) policy.
IP_NF_TARGET_ECN
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `ECN' target, which can be used in
		  the iptables mangle table.
IP_NF_TARGET_MASQUERADE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Masquerading is a special case of NAT: all outgoing connections are
		changed to seem to come from a particular interface's address, and
		if the interface goes down, those connections are lost.  This is
		only useful for dialup accounts with dynamic IP address (ie. your IP
		address will be different on next dialup).
IP_NF_TARGET_NETMAP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This is a backwards-compat option for the user's
		  convenience (e.g. when running oldconfig). 2. vts require
IP_NF_TARGET_REDIRECT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, This is a backwards-compat option for the user's convenience
		(e.g. when running oldconfig). It selects CONFIG_NETFILTER_XT_TARGET_REDIRECT.
IP_NF_TARGET_REJECT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, The REJECT target allows a filtering rule to specify that an ICMP
		error should be issued in response to an incoming packet, rather
		than silently being dropped.
IP_NF_TARGET_SYNPROXY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK && NETFILTER_ADVANCED, allows you to intercept TCP connections and
		establish them using syncookies before they are passed on to the server. This allows to avoid conntrack and server resource usage
		during SYN-flood attacks.
IP_NF_TARGET_TTL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This is a backwards-compatible option for the user's
		  convenience (e.g. when running oldconfig). It selects
		  CONFIG_NETFILTER_XT_TARGET_HL.
IP_NF_VOWIFI_DEC_TCPDUMP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] debug
	[function] This enables dumping original packets in xfrm module.
		   It is for debug vowifi module.
IP_PNP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This enables automatic configuration of IP addresses of devices and
		of the routing table during kernel boot, based on either information
		supplied on the kernel command line or by BOOTP or RARP protocols.
		You need to say Y only for diskless machines requiring network
		access to boot (in which case you want to say Y to "Root file system
		on NFS" as well), because all other machines configure the network
		in their startup scripts.
IP_PNP_DHCP
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function]  DHCP support
IP_ROUTE_VERBOSE
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] the kernel will print verbose messages regarding the routing, for example warnings about
		received packets which look strange and could be evidence of an
		attack or a misconfigured system somewhere. The information is
		handled by the klogd daemon which is responsible for kernel messages
		("man klogd").
IRQCHIP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support chip irq.
IRQSOFF_TRACER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Enable/disable trace irq off.
IRQ_DOMAIN
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] irq domain support.
IRQ_DOMAIN_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] debug
	[function] Support irq domain debug.
IRQ_DOMAIN_HIERARCHY
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for hierarchical irq domains.
IRQ_FORCED_THREADING
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] 
IRQ_WORK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable irq work.
JBD2
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] busybox_console
	[function] Generic journaling layer for block devices that support
		   both 32-bit and 64-bit block numbers. It is currently
		   used by the ext4 and OCFS2 filesystems.
JUMP_LABEL
	[arch] all
	[plat] all
	[field] code
	[subsys] soc
	[must] user
	[function] Optimize very unlikely/likely branches.
KALLSYMS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] load all symbols for debugging/ksymoops
KALLSYMS_ALL
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] include all symbols in kallsyms
KERNEL_GZIP
	[arch] arm,x86
	[plat] pike2,sharkl2,sharkle32,isharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Choose kernel compression mode GZIP.
KERNEL_MODE_NEON
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] crypto
	[must] none
	[function] Support for NEON in kernel mode
KERNFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] Kernfs support.
KEYBOARD_GPIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] GPIO Buttons
KEYBOARD_SPRD
	[arch] arm,arm64
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Spreadtrum keypad support
KEYS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable access key retention support.
KEYS_COMPAT
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] core
	[must] console
	[function] Support for Key compat.
KSM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Enable KSM for page merging.
KUSER_HELPERS
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] code
	[subsys] mm
	[must] console
	[function] Enable kuser helpers in vector page.
L2TP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for L2tp.
LBDAF
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] This function is support large (2TB+) block devices and files.
LEDS_CLASS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] leds
	[must] user
	[function] LED Class Support
LEDS_SPRD_BLTC_RGB
	[arch] all
	[plat] all
	[field] make
	[subsys] leds
	[must] none
	[function] This function is used to enable bltc
LEDS_SPRD_KPLED
	[arch] all
	[plat] all
	[field] make
	[subsys] leds
	[must] none
	[function] This function is used to enable kpled
LEDS_TRIGGERS
	[arch] all
	[plat] all
	[field] menu
	[subsys] leds
	[must] unknown
	[function] LED Trigger support
LEDS_TRIGGER_CPU
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] leds
	[must] unknown
	[function] LED CPU Trigger
LEDS_TRIGGER_HEARTBEAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] leds
	[must] unknown
	[function] LED Heartbeat Trigger
LIBCRC32C
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC32c (Castagnoli, et al) Cyclic Redundancy-Check.
LIBFDT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support the kernel for fdt.
LOCALVERSION
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Local version - append to kernel release. Set to "".
LOCKDEP
	[arch] arm
	[plat] sharkle32,pike2
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Support for check deadlock.
LOCKDEP_SUPPORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable kernel support lockup.
LOCKUP_DETECTOR
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] enable kernel soft lockup and hard lockup
LOCK_SPIN_ON_OWNER
	[arch] all
	[plat] all
	[field] make
	[subsys] interrupt
	[must] console
	[function] An MCS like lock especially tailored for optimistic spinning for sleeping
		lock implementations.
LOG_BUF_SHIFT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Set the size of log buffer. highmem use 18, lowmem use 17.
LOG_CPU_MAX_BUF_SHIFT
	[arch] all
	[plat] all
	[field] menu
	[subsys] arch
	[must] console
	[function] CPU kernel log buffer size contribution (13 => 8 KB, 17 => 128KB).
LOOK_AT
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] debug
	[function] This function is used to enable lookat function
LOWMEM_NOTIFY_KOBJ
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] android_console
	[function] lowmem notify by kobj
LSM_MMAP_MIN_ADDR
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] Low address space for LSM to protect from user allocation.
LZ4_COMPRESS
	[arch] all
	[plat] isharkl2,iwhale2,pike2,sharkl2,sharkl3,sharklj1,sharkle,sharkle32,whale2
	[field] make,code
	[subsys] lib
	[must] zram
	[function] compress algorithm.
LZ4_DECOMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] busybox_console
	[function] uncompress algorithm.
LZO_COMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] busybox_console
	[function] compress algorithm
LZO_DECOMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] busybox_console
	[function] uncompress algorithm.
MAC80211_STA_HASH_MAX_SIZE
	[arch] all
	[plat] all
	[field] code
	[subsys] mac80211
	[must] user
	[function] Station hash table maximum size
MAGIC_SYSRQ
	[arch] all
	[plat] all
	[field] code,make
	[subsys] core,uart
	[must] debug
	[function] Debug kernel using sysrq function.
MAGIC_SYSRQ_DEFAULT_ENABLE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Default enable sysrq debug function.
MD
	[arch] all
	[plat] all
	[field] menu
	[subsys] md
	[must] user
	[function] The device mapper is a framework provided by the Linux kernel.
		   for mapping physical block devices onto higher-level virtual block devices.
		   must enable when DM_VERIFY function enable.
MDIO_BITBANG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for bitbanged MDIO buses
MDIO_GPIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for GPIO lib-based bitbanged MDIO buses
MEMBARRIER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Enable membarrier() system call.
MEMCG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] none
	[function] Provides a memory resource controller that manages both anonymous
		   memory and page cache. (See Documentation/cgroups/memory.txt).
MEMCG_KMEM
	[arch] all
	[plat] sharkl3,sharkle
	[field] make,code
	[subsys] mm
	[must] android_console
	[function] Memory Resource Controller Kernel Memory accounting.
MEMCG_SWAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] none
	[function] Add swap management feature to memory resource controller. When you
		   enable this, you can limit mem+swap usage per cgroup.
MEMCG_SWAP_ENABLED
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] none
	[function] Memory Resource Controller Swap Extension enabled by default
MEMORY_STATE_TIME
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] mm
	[must] console
	[function] Memory time statistics exported to /sys/kernel/memory_state_time.
MESSAGE_LOGLEVEL_DEFAULT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Default message log level (1-7), set to 4.
MFD_CORE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mfd
	[must] user
	[function] Support for mfd device management
MFD_SC2703
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Support for sc2703 charger management
MFD_SPRD_PMIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] mfd
	[must] user
	[function] Spreadtrum SPI PMICs
MFD_SYSCON
	[arch] all
	[plat] all
	[field] menu
	[subsys] mfd
	[must] user
	[function] System Controller Register R/W Based on Regmap.
MICROARRAY_FINGERPRINT
	[arch] arm,arm64,x86
	[plat] pike2,sharkl3
	[field] make
	[subsys] input
	[must] none
	[function] enable microarray fingerprint driver build in kernel
MIGHT_HAVE_CACHE_L2X0
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] menu
	[subsys] core
	[must] console
	[function] This option should be selected by machines which have a L2x0
		or PL310 cache controller, but where its use is optional.
MIGHT_HAVE_PCI
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] menu
	[subsys] core
	[must] console
	[function] This config select the PCI.
MIGRATION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Allows the migration of the physical location of pages of processes
		while the virtual addresses are not changed.
MISC_FILESYSTEMS
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] user
	[function] Miscellaneous filesystems support. This option alone
		   does not add any kernel code. Sdcardfs/ubifs need this.
MMC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] MMC/SD/SDIO card support
MMC_BLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] MMC block device driver
MMC_BLOCK_BOUNCE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] Use bounce buffer for simple hosts
MMC_BLOCK_MINORS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] Number of minors per block device
MMC_SMALLER_QUEUE_BOUNCESZ
	[arch] arm
	[plat] sharkle
	[field] make
	[subsys] mmc
	[must] user
	[function] Use smaller bounce buffer for low memory buffer
MMC_SPRD_SDHCR10
	[arch] arm,arm64
	[plat] pike2,sharkle
	[field] make
	[subsys] mmc
	[must] user
	[function] add sprd mmc host controller driver(r10p0) to kernel.
MMC_SPRD_SDHCR11
	[arch] arm64
	[plat] sharkl3
	[field] make
	[subsys] mmc
	[must] user
	[function] add sprd mmc host controller driver(r11p0) to kernel.
MMU
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Select if you want MMU-based virtualised addressing space
			support by paged memory management.
MODULES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Enable loadable module support.
MODULES_TREE_LOOKUP
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] PERF_EVENTS || TRACING chosen this.
MODULES_USE_ELF_REL
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Modules only use ELF REL relocations.  Modules with ELF RELA
			relocations will give an error.
MODULES_USE_ELF_RELA
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Modules only use ELF RELA relocations.  Modules with ELF REL
		relocations will give an error.
MODULE_FORCE_UNLOAD
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Forced module unloading.
MODULE_UNLOAD
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] user
	[function]  vts require, Let the kernel uninstall the wi-fi,
		   and the next load will be successful.
MODVERSIONS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Module versioning support.
MPILIB
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] needed by other configs
MSDOS_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] MSDOS filesystem support.
MSDOS_PARTITION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] depends on PARTITION_ADVANCED
MTD
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Memory Technology Device (MTD) support
MTD_BLKDEVS
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] MTD block devices support
MTD_BLOCK
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] caching block device access to MTD devices
MTD_CFI_I1
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Support 1-chip flash interleave
MTD_CFI_I2
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Support 2-chip flash interleave
MTD_CMDLINE_PARTS
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Command line partition table parsing
MTD_M25P80
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] none
	[function] Support most SPI Flash chips (AT26DF, M25P, W25X, ...)
MTD_MAP_BANK_WIDTH_1
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Support 8-bit buswidth nand flash
MTD_MAP_BANK_WIDTH_2
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Support 16-bit buswidth nand flash
MTD_MAP_BANK_WIDTH_4
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Support 32-bit buswidth nand flash
MTD_NAND
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Enables support for NAND controller driver
MTD_NAND_ECC
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Enables support for NAND controller ECC function
MTD_NAND_IDS
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Include chip ids for known NAND devices
MTD_NAND_SPRD
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Enables support for NAND controller on SPRD SoC
MTD_OF_PARTS
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] OpenFirmware partitioning information support
MTD_SPI_NOR
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] none
	[function] SPI-NOR device support
MTD_SPI_NOR_USE_4K_SECTORS
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] none
	[function] Use small 4096B erase sectors in spi-nor flash
MTD_UBI
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Enable UBI - Unsorted block images
MULTIPLE_OOM_KILLER
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] LMK uses the macro.
MULTIPLE_OOM_KILL_COUNT
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] LMK uses the macro.
MULTIUSER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Multiple users, groups and capabilities support.
MULTI_IRQ_HANDLER
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Allow each machine to specify it's own IRQ handler at run time.
MUTEX_SPIN_ON_OWNER
	[arch] arm,arm64
	[plat] sharkl2,sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support mutex spin on owner.
NAMESPACES
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] menu
	[subsys] core
	[must] console
	[function] Provides the way to make tasks work with different objects using
		the same id.
NEED_DMA_MAP_STATE
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] The macro definition of control has been commented out.
NEED_SG_DMA_LENGTH
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Used for decentralized/clustered DMA operations.
NEON
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] menu
	[subsys] core
	[must] console
	[function] Advanced SIMD (NEON) Extension support.
		the ARMv7 Advanced SIMD Extension.
NET
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, support for net
NETDEVICES
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Network device support
NETFILTER
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, support for netfilter
NETFILTER_ADVANCED
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support for Advanced netfilter configuration
NETFILTER_INGRESS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Netfilter ingress support
NETFILTER_NETLINK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for netfilter netlink
NETFILTER_NETLINK_GLUE_CT
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] If this option is enabled, NFQUEUE and NFLOG can include
		Connection Tracking information together with the packet is
		the enqueued via NFNETLINK.
NETFILTER_NETLINK_LOG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Netfilter LOG over NFNETLINK interface
NETFILTER_NETLINK_QUEUE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for queueing packets via NFNETLINK.
NETFILTER_SYNPROXY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] The SYNPROXY target allows you to intercept TCP connections and establish them using syncookies before they are passed on to the
		server. This allows to avoid conntrack and server resource usage during SYN-flood attacks.
NETFILTER_XTABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Netfilter Xtables support (required for ip_tables)
NETFILTER_XT_CONNMARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This option adds the "CONNMARK" target and "connmark" match.
		Netfilter allows you to store a mark value per connection (a.k.a.
		ctmark), similarly to the packet mark (nfmark). Using this
		target and match, you can set and match on this mark.
NETFILTER_XT_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] nfmark target and match support
NETFILTER_XT_MATCH_ADDRTYPE
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option allows you to match what routing thinks of
		  an address, eg. UNICAST, LOCAL, BROADCAST, ...
NETFILTER_XT_MATCH_COMMENT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `comment' dummy-match, which allows you to put comments in your iptables ruleset.
NETFILTER_XT_MATCH_CONNBYTES
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `connbytes' match, which allows
		  you to match the number of bytes and/or packets for
		  each direction within a connection.
NETFILTER_XT_MATCH_CONNLIMIT
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1.  This match allows you to match against the number
		  of parallel connections to a server per client IP
		  address (or address block). 2. vts require
NETFILTER_XT_MATCH_CONNMARK
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, This is a backwards-compat option for the user's convenience (e.g. when running oldconfig). It selects
		CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).
NETFILTER_XT_MATCH_CONNTRACK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "conntrack" connection tracking match support
NETFILTER_XT_MATCH_ECN
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] This option adds an "ECN" match, which allows you to
		  match against the IPv4 and TCP header ECN fields.
NETFILTER_XT_MATCH_ESP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This match extension allows you to match a range of
		  SPIs inside ESP header of IPSec packets.
NETFILTER_XT_MATCH_HASHLIMIT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `hashlimit' match.
		As opposed to `limit', this match dynamically creates a hash table
		of limit buckets, based on your selection of source/destination
		addresses and/or ports.
		It enables you to express policies like `10kpps for any given
		destination address' or `500pps from any given source address'
		with a single rule.
NETFILTER_XT_MATCH_HELPER
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. Helper matching allows you to match packets in dynamic
		  connections tracked by a conntrack-helper,
		  ie. ip_conntrack_ftp 2. vts require
NETFILTER_XT_MATCH_HL
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] HL matching allows you to match packets based on the
		  hoplimit in the IPv6 header, or the time-to-live field in
		  the IPv4 header of the packet.
NETFILTER_XT_MATCH_IPCOMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This match extension allows you to match a range of
		  CPIs(16 bits) inside IPComp header of IPSec packets.
NETFILTER_XT_MATCH_IPRANGE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "iprange" address range match support
NETFILTER_XT_MATCH_L2TP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds an "L2TP" match, which allows you to
		  match against L2TP protocol header fields.
NETFILTER_XT_MATCH_LENGTH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,  This option allows you to match the length of a packet against a
		specific value or range of values.
NETFILTER_XT_MATCH_LIMIT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "limit" match support
NETFILTER_XT_MATCH_MAC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "mac" address match support
NETFILTER_XT_MATCH_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "mark" match support
NETFILTER_XT_MATCH_MULTIPORT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "multiport" Multiple port match support
NETFILTER_XT_MATCH_PKTTYPE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "pkttype" packet type match support
NETFILTER_XT_MATCH_POLICY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IPsec "policy" match support
NETFILTER_XT_MATCH_QTAGUID
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,"quota, tag, owner" match and stats support
NETFILTER_XT_MATCH_QUOTA
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "quota" match support
NETFILTER_XT_MATCH_QUOTA2
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "quota2" match support
NETFILTER_XT_MATCH_QUOTA2_LOG
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds an "L2TP" match, which allows you to
		  his option allows `quota2' to log ONCE when a
		  quota limit.
NETFILTER_XT_MATCH_SCTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] With this option enabled, you will be able to use the
		  `sctp' match in order to match on SCTP source/destination
		  portsand SCTP chunk types.NETFILTER_XT_MATCH_SOCKET.
NETFILTER_XT_MATCH_SOCKET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "socket" match support
NETFILTER_XT_MATCH_STATE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "state" match support
NETFILTER_XT_MATCH_STATISTIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "statistic" match support
NETFILTER_XT_MATCH_STRING
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,"string" match support
NETFILTER_XT_MATCH_TCPMSS
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `tcpmss' match, which allows you to
		  examine the MSS value of TCP SYN packets, which control
		  the maximum packet size for that connection.
NETFILTER_XT_MATCH_TIME
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "time" match support
NETFILTER_XT_MATCH_U32
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "u32" match support
NETFILTER_XT_NAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "SNAT and DNAT" targets support
NETFILTER_XT_TARGET_CLASSIFY
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This option adds a `CLASSIFY' target, which enables the
		  user to set the priority of a packet. 2. vts require
NETFILTER_XT_TARGET_CONNMARK
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, "CONNMARK" target support
		This is a backwards-compat option for the user's convenience
		(e.g. when running oldconfig). It selects
		CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).
NETFILTER_XT_TARGET_CONNSECMARK
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1.The CONNSECMARK target copies security markings from
		  packets to connections, and restores security markings from
		  connections to packets (if the packets are not already marked).
		  2. vts require
NETFILTER_XT_TARGET_DSCP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `DSCP' target, which allows you to
		   manipulate the IPv4/IPv6 header DSCP field
		   (differentiated services codepoint).
		   The DSCP field can have any value between 0x0 and
		   0x3f inclusive.
		   It also adds the "TOS" target, which allows you to
NETFILTER_XT_TARGET_HL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds the "HL" (for IPv6) and "TTL"
		  (for IPv4) targets, which enable the user to change the
		  hoplimit/time-to-live value of the IP header.
NETFILTER_XT_TARGET_IDLETIMER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IDLETIMER target support
NETFILTER_XT_TARGET_LOG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] LOG target support
NETFILTER_XT_TARGET_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "MARK" target support
NETFILTER_XT_TARGET_NETMAP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "NETMAP" target support, NETMAP is an implementation of static 1:1 NAT mapping of network
		addresses. It maps the network address part, while keeping the host address part intact.
NETFILTER_XT_TARGET_NFLOG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "NFLOG" target support
NETFILTER_XT_TARGET_NFQUEUE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,"NFQUEUE" target Support:This target replaced the old obsolete QUEUE target.
NETFILTER_XT_TARGET_REDIRECT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "REDIRECT target support:REDIRECT is a special case of NAT: all incoming connections are
		mapped onto the incoming interface's address, causing the packets to
		come to the local machine instead of passing through. This is
		useful for transparent proxies.
NETFILTER_XT_TARGET_SECMARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "SECMARK" target support: The SECMARK target allows security marking of network
		packets, for use with security subsystems.
NETFILTER_XT_TARGET_TCPMSS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "TCPMSS" target support: This option adds a `TCPMSS' target, which allows you to alter the
		MSS value of TCP SYN packets, to control the maximum size for that
		connection (usually limiting it to your outgoing interface's MTU minus 40).
NETFILTER_XT_TARGET_TEE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option adds a "TEE" target with which a packet
		  can be cloned and this clone be rerouted to
		  another nexthop.
NETFILTER_XT_TARGET_TPROXY
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This option adds a `TPROXY' target, which is somewhat
		  similar to REDIRECT. 2. vts require
NETFILTER_XT_TARGET_TRACE
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. The TRACE target allows you to mark packets so that
		  the kernel will log every rule which match the packets as
		  those traverse the tables, chains, rules. 2. vts require
NETWORK_SECMARK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] This enables security marking of network packets, similar to nfmark, but designated for security purposes.
NET_CLS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for net classfication.
NET_CLS_ACT
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Say Y here if you want to use traffic control actions. Actions
		get attached to classifiers and are invoked after a successful
		classification. They are used to overwrite the classification
		result, instantly drop or redirect packets, etc.
NET_CLS_FW
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option enable you to classify packets according
		  to netfilter/firewall marks.
NET_CLS_U32
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Say Y here to be able to classify packets using a universal 32bit pieces based comparison scheme.
NET_CORE
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Network core driver support
NET_EMATCH
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Say Y here if you want to use extended matches on top of classifiers
		and select the extended matches below.
		Extended matches are small classification helpers not worth writing
		a separate classifier for.
NET_EMATCH_STACK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Size of the local stack variable used while evaluating the tree of
		ematches. Limits the depth of the tree, i.e. the number of
		encapsulated precedences. Every level requires 4 bytes of additional
		stack space.
NET_EMATCH_U32
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Say Y here if you want to be able to classify packets using
		the famous u32 key in combination with logic relations.
NET_FLOW_LIMIT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function]  The network stack has to drop packets when a receive processing CPU's
		backlog reaches netdev_max_backlog. If a few out of many active flows
		generate the vast majority of load, drop their traffic earlier to
		maintain capacity for the other flows. This feature provides servers
		with many clients some protection against DoS by a single (spoofed)
		flow that greatly exceeds average workload.
NET_INGRESS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Support for classifying packets from ingress
NET_IPGRE_DEMUX
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] his is helper module to demultiplex GRE packets on GRE version field criteria.
		Required by ip_gre and pptp modules.
NET_IPVTI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for Virtual (secure) IP tunneling:This can be used with xfrm mode tunnel to give
		If don't enable this config, the phone will have the internal problem.
NET_IP_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for ip tunnelling
NET_KEY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, PF_KEYv2 socket family, compatible to KAME ones.
		They are required if you are going to use IPsec tools ported from KAME.
NET_RX_BUSY_POLL
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Support for received data polling
NET_SCHED
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, If you say N here, you will get the standard packet scheduler, which
		is a FIFO (first come, first served). If you say Y here, you will be
		able to choose from among several alternative algorithms which can
		then be attached to different network devices. This is useful for
		example if some of your network devices are real time devices that
		need a certain minimum data flow rate, or if you need to limit the
		maximum data flow rate for traffic which matches specified criteria.
		This code is considered to be experimental.
NET_SCH_FIFO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for the standard packet scheduler, which is a FIFO (first come, first served)
NET_SCH_HTB
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Say Y here if you want to use the Hierarchical Token Buckets (HTB)
		packet scheduling algorithm
NET_UDP_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for UDP Tunneling Protocol
NEW_LEDS
	[arch] all
	[plat] all
	[field] menu
	[subsys] leds
	[must] user
	[function] LED Support
NFC
	[arch] arm
	[plat] sharkl2,sharkle32
	[field] menu
	[subsys] core
	[must] none
	[function] enable nfc driver build in kernel
NFC_PN80T
	[arch] arm
	[plat] shakle32
	[field] make
	[subsys] nfc
	[must] none
	[function] enable nxp nfc driver build in kernel
NF_CONNTRACK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Netfilter connection tracking support
NF_CONNTRACK_AMANDA
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. This allows the connection tracking and natting
		  code to allow the sub-channels that Amanda requires
		  for communication of the backup data, messages and
		  index.2. vts require
NF_CONNTRACK_BROADCAST
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] select NF_CONNTRACK_BROADCAST by NF_CONNTRACK_NETBIOS_NS
NF_CONNTRACK_EVENTS
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, If this option is enabled, the connection tracking code will
		provide a notifier chain that can be used by other kernel code
		to get notified about changes in the connection tracking state.
NF_CONNTRACK_FTP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Tracking FTP connections is problematic: special helpers are
		required for tracking them, and doing masquerading and other forms
		of Network Address Translation on them.
		This is FTP support on Layer 3 independent connection tracking.
		Layer 3 independent connection tracking is experimental scheme
		which generalize ip_conntrack to support other layer 3 protocols.
NF_CONNTRACK_H323
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. support H.323 on a connection tracking/NAT firewall.
		  2. vts require
NF_CONNTRACK_IPV4
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IPv4 connection tracking support (required for NAT)
NF_CONNTRACK_IPV6
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, IPv6 connection tracking support
NF_CONNTRACK_IRC
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. There is a commonly-used extension to IRC called
		  Direct Client-to-Client Protocol (DCC).  This enables
		  users to send files to each other, and also chat to each
		  other without the need of a server. 2. vts require
NF_CONNTRACK_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This option enables support for connection marks, used by the
		`CONNMARK' target and `connmark' match. Similar to the mark value
		of packets, but this mark value is kept in the conntrack session
		instead of the individual packets.
NF_CONNTRACK_NETBIOS_NS
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. NetBIOS name service requests are sent as broadcast
		  messages from an unprivileged port and responded to with
		  unicast messages to the same port. 2. vts require
NF_CONNTRACK_PPTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] vts require, This module adds support for PPTP (Point to Point Tunnelling Protocol, RFC2637) connection tracking and NAT.
NF_CONNTRACK_PROCFS
	[arch] all
	[plat] all
	[field] code
	[subsys] net
	[must] user
	[function] This option enables for the list of known conntrack entries
		to be shown in procfs under net/netfilter/nf_conntrack. This
		is considered obsolete in favor of using the conntrack(8)
		tool which uses Netlink.
NF_CONNTRACK_PROC_COMPAT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] This option enables /proc and sysctl compatibility with the old
		layer 3 dependent connection tracking. This is needed to keep
		old programs that have not been adapted to the new names working.
NF_CONNTRACK_SANE
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. SANE is a protocol for remote access to scanners as
		  implemented by the 'saned' daemon. Like FTP, it uses separate
		  control and data connections. 2. vts require
NF_CONNTRACK_SECMARK
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. The SECMARK target allows security marking of network
		  packets, for use with security subsystems. 2. vts require
NF_CONNTRACK_SIP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support sip protocol on a connection
		  tracking/NATing firewall.
NF_CONNTRACK_TFTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] vts require, TFTP connection tracking helper, this is required depending
		on how restrictive your ruleset is.
		If you are using a tftp client behind -j SNAT or -j MASQUERADING
		you will need this.
NF_CT_NETLINK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] vts require, support for a netlink-based userspace interface
NF_CT_NETLINK_TIMEOUT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option enables support for connection tracking
		  timeout fine-grain tuning. This allows you to attach
		  specific timeout, policies to flows, instead of using
		  the global timeout policy.
NF_CT_PROTO_DCCP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. With this option enabled, the layer 3 independent
		  connection tracking code will be able to do state
		  tracking on DCCP connections. 2. vts require
NF_CT_PROTO_GRE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Connection tracking protocol helper module for GRE.
		GRE is a generic encapsulation protocol, which is generally not very
		suited for NAT, as it has no protocol-specific part as port numbers.
NF_CT_PROTO_SCTP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. With this option enabled, the layer 3 independent
		  connection tracking code will be able to do state
		  tracking on SCTP connections. 2. vts require
NF_CT_PROTO_UDPLITE
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. With this option enabled, the layer 3 independent
		  connection tracking code will be able to do state
		  tracking on UDP-Lite connections.2. vts require
NF_DEFRAG_IPV4
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] Netfilter connection tracking requires all IPv4 packets to be defragmented.
		Both the socket match and the TPROXY target depend on this functionality, so
		this patch separates the Netfilter IPv4 defrag hooks into a separate module.
NF_DEFRAG_IPV6
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] Netfilter connection tracking requires all IPv6 packets to be defragmented.
		Both the socket match and the TPROXY target depend on this functionality, so
		this patch separates the Netfilter IPv6 defrag hooks into a separate module.
NF_DUP_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option adds a "TEE" target with which a packet
		  can be cloned and this clone be rerouted to another
		  nexthop.
NF_DUP_IPV6
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] This option enables the nf_dup_ipv6 core, which
		  duplicates an IPv6 packet to be rerouted to another
		  destination.
NF_LOG_COMMON
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Support for logging
NF_LOG_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Support for IPv4 packet logging
NF_LOG_IPV6
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Support for IPv6 packet logging
NF_NAT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] vts require, support for nat.
NF_NAT_AMANDA
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK && NF_NAT
NF_NAT_FTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support FTP NAT helper
NF_NAT_H323
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK
NF_NAT_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] The IPv4 NAT option allows masquerading, port forwarding and other
		forms of full Network Address Port Translation. This can be
		controlled by iptables or nft.
NF_NAT_IPV6
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK_IPV6 & NETFILTER_ADVANCED, The IPv6 NAT option allows masquerading, port forwarding and other
		forms of full Network Address Port Translation. This can be controlled by iptables or nft.
NF_NAT_IRC
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support IPv6 in IRC NAT helper
NF_NAT_MASQUERADE_IPV4
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] This is the kernel functionality to provide NAT in the masquerade
		flavour (automatic source address selection).
NF_NAT_MASQUERADE_IPV6
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] This is the kernel functionality to provide NAT in
		  the masquerade flavour (automatic source address
		  selection).
NF_NAT_NEEDED
	[arch] all
	[plat] all
	[field] code
	[subsys] net
	[must] user
	[function] depends on NF_NAT
NF_NAT_PPTP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] NAT support for PPTP (Point to Point Tunneling Protocol).
NF_NAT_PROTO_DCCP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_NAT && NF_CT_PROTO_DCCP
NF_NAT_PROTO_GRE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] NAT protocol helper module for GRE.GRE is a generic encapsulation protocol, which is generally not very
		suited for NAT, as it has no protocol-specific part as port numbers.
NF_NAT_PROTO_SCTP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_NAT && NF_CT_PROTO_SCTP
NF_NAT_PROTO_UDPLITE
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_NAT && NF_CT_PROTO_UDPLITE
NF_NAT_REDIRECT
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] IPv4/IPv6 redirect support
NF_NAT_SIP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support SIP protocol on a connection
		  tracking/NATing firewall.
NF_NAT_TFTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support IPv6 in TFTP NAT helper
NF_REJECT_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support for ipv4 rejecting in netfilter
NF_REJECT_IPV6
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support for ipv6 rejecting in netfilter
NL80211_TESTMODE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] wireless
	[must] user
	[function] helps implementing things like factory calibration or
			validation tools for wireless chips
NLATTR
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for netlink attribute
NLS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] The base Native Language Support. A number of
		   filesystems depend on it (e.g. FAT, JOLIET, NT, BEOS
		   filesystems), as well as the ability of some filesystems
		   to use native languages (NCP, SMB).
NLS_ASCII
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Native language support ASCII characters
NLS_CODEPAGE_437
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Character sets. Codepage 437 (United States, Canada).
NLS_DEFAULT
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Default NLS config.
NLS_ISO8859_1
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Character sets. NLS ISO 8859-1  (Latin 1; Western
		   European Languages).
NLS_UTF8
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Character sets. UTF-8.
NOP_TRACER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] The ararchitecture of tracer.
NO_BOOTMEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Early memory allocators used memblock.
NO_HZ
	[arch] all
	[plat] all
	[field] make,code
	[subsys] time
	[must] console
	[function] vts require, Old Idle dynticks config.
NO_HZ_COMMON
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] Together with hrtimer to support tick one-shot.
NO_HZ_IDLE
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] Idle dynticks system (tickless idle).
NO_IOPORT_MAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Select by IF !PCI.
NR_CPUS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Maximum number of CPUs (2-4096).
OF
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Device Tree and Open Firmware support.
OF_ADDRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support OF set address.
OF_ADDRESS_PCI
	[arch] all
	[plat] roc1
	[field] code
	[subsys] of
	[must] user
	[function] Select by IF PCI.
OF_EARLY_FLATTREE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support early flattree of Openfirmware.
OF_FLATTREE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for flat tree.
OF_GPIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Supprot for gpio driver
OF_IRQ
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support OpenFirmware irq.
OF_MDIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support MDIO.
OF_MTD
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] Support MTD subsys
OF_NET
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support OpenFirmware net.
OF_PCI
	[arch] all
	[plat] roc1
	[field] make
	[subsys] of
	[must] user
	[function] OpenFirmware PCI bus accessors.Select by IF PCI.
OF_PCI_IRQ
	[arch] all
	[plat] roc1
	[field] make
	[subsys] of
	[must] user
	[function] OpenFirmware PCI IRQ routing.Select by IF PCI.
OF_RESERVED_MEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support Openfirmware reserved memory.
OID_REGISTRY
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] needed by other configs
OLD_MCOUNT
	[arch] arm
	[plat] pike2
	[field] code
	[subsys] debug
	[must] console
	[function] depends on FUNCTION_TRACER && FRAME_POINTER
OLD_SIGACTION
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] code
	[subsys] core
	[must] core
	[function] Architecture has old sigaction(2) syscall.  Nope, not the same
		as OLD_SIGSUSPEND | OLD_SIGSUSPEND3 - alpha has sigsuspend(2),
		but fairly different variant of sigaction(2), thanks to OSF/1 compatibility...
OLD_SIGSUSPEND3
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Even weirder antique ABI - three-argument sigsuspend(2).
OOM_NOTIFIER
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] none
	[function] Using a Android-Style oom-killer instead of linux's native OOM_killer..
OTP_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] misc
	[must] unknown
	[function] This module is usbed to provided efuse registration interface.
OTP_SPRD_AP_PUBLIC_EFUSE
	[arch] arm,arm64
	[plat] all
	[field] make code
	[subsys] misc
	[must] user
	[function] This function is used to add ap efuse moudle for get chip parameters.
OTP_SPRD_PMIC_EFUSE
	[arch] all
	[plat] all
	[field] make
	[subsys] misc
	[must] user
	[function] This function is used to add pmic efuse moudle for get chip parameters.
PACKET
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require
PAGE_COUNTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] android_console
	[function] The cgroup-memory subsystem is related.
PAGE_OFFSET
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] make,code
	[subsys] mm
	[must] console
	[function] Set the memory limit between userspace and kernelspace.
PANIC_ON_OOPS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Kernel panic when OOPS.
PANIC_ON_OOPS_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Set kernel value panic_on_oops.
PANIC_TIMEOUT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Machine restart if kernel panic.
PARTITION_ADVANCED
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Support use hard disks under linux which were partitioned under an operating
		   system running on a different architecture than linux system.
PCI
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Enables support for PCI bus system.
PCIE_DW
	[arch] all
	[plat] roc1
	[field] make
	[subsys] pci
	[must] user
	[function] Synopsys Designware PCIe host controller driver.
		   Select by IF PCIE_SPRD.
PCIE_SPRD
	[arch] all
	[plat] roc1
	[field] make
	[subsys] pci
	[must] user
	[function] Enable Spreadtrum PCIe controller.
PCI_BUS_ADDR_T_64BIT
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Select by IF PCI && (ARCH_DMA_ADDR_T_64BIT || 64BIT).
PCI_DOMAINS
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Select by IF PCI.
PCI_DOMAINS_GENERIC
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Select by IF PCI.
PCI_MSI
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] This allows device drivers to enable MSI.
PCI_MSI_IRQ_DOMAIN
	[arch] all
	[plat] roc1
	[field] code
	[subsys] pci
	[must] user
	[function] Select by IF PCI_MSI.
PCI_QUIRKS
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Select by IF PCI.
PCI_SYSCALL
	[arch] all
	[plat] roc1
	[field] make
	[subsys] pci
	[must] user
	[function] Select by IF PCI.
PERF_EVENTS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Kernel performance events and counters.
PERF_USE_VMALLOC
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support Performance Counters for Linux.
PGTABLE_LEVELS
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] console
	[function] Set the page table level.
PHYLIB
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Ethernet controllers are usually attached to PHY
		devices.  This option provides infrastructure for
		managing PHY devices.
PHYS_ADDR_T_64BIT
	[arch] all
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Define the number of digits of phys_addr_t.
PINCONF
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Support pin configuration controllers.
PINCTRL
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Support pin configuration controllers.
PINCTRL_SPRD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] pinctrl
	[must] user
	[function] Spreadtrum pinctrl driver.
PINMUX
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Support pin multiplexing controllers.
PKCS7_MESSAGE_PARSER
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] PKCS#7 message parser
PKCS7_TEST_KEY
	[arch] 
	[plat] 
	[field] 
	[subsys] 
	[must] 
	[function] 
PM
	[arch] all
	[plat] all_sp
	[field] make,code
	[subsys] power
	[must] user
	[function] power management system
PMIC_SC2720
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] user
	[function] Select if use sc2720 PMIC.
PMIC_SC2721
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] user
	[function] Select if use sc2720 PMIC.
PM_AUTOSLEEP
	[arch] all
	[plat] isharkl2,whale2,sharkl2,sharkle
	[field] make,code
	[subsys] power
	[must] user
	[function] vts require, Support for PM_AUTOSLEEP
PM_CLK
	[arch] all
	[plat] all_sp
	[field] make,code
	[subsys] power
	[must] user
	[function] power subsystem clock management
PM_DEBUG
	[arch] all
	[plat] all_sp
	[field] make,code
	[subsys] power
	[must] debug
	[function] Power management debug switch
PM_DEVFREQ
	[arch] all
	[plat] all_sp
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] Generic Dynamic Voltage and Frequency Scaling (DVFS) support
PM_GENERIC_DOMAINS
	[arch] all
	[plat] sharl3
	[field] make,code
	[subsys] device power
	[must] user
	[function] common driver of device power domain
PM_GENERIC_DOMAINS_OF
	[arch] all
	[plat] sharl3
	[field] code
	[subsys] device power
	[must] user
	[function] Device Tree based PM domain
PM_GENERIC_DOMAINS_SLEEP
	[arch] all
	[plat] sharl3
	[field] code
	[subsys] power
	[must] user
	[function] without using except defconfig_update.sh checking
PM_OPP
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] make
	[subsys] power
	[must] user
	[function] This function is enabele power opp
PM_SLEEP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Support for PM sleep.
PM_SLEEP_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] power
	[must] user
	[function] Support for PM sleep debug.
PM_SLEEP_SMP
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] Support for PM sleep on SMP.
PM_WAKELOCKS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] vts require, User space wakeup sources interface
PM_WAKELOCKS_GC
	[arch] all
	[plat] all
	[field] code
	[subsys] power
	[must] user
	[function] Garbage collector for user space wakeup sources
PM_WAKELOCKS_LIMIT
	[arch] all
	[plat] all
	[field] code
	[subsys] power
	[must] user
	[function] Maximum number of user space wakeup sources (0 = no limit)
POWER_RESET
	[arch] all
	[plat] all
	[field] make,code
	[subsys] reset
	[must] user
	[function] Provides a number of drivers which either reset a complete board.
POWER_RESET_SC27XX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] reset
	[must] user
	[function] unisoc power off driver.
POWER_RESET_SYSCON
	[arch] arm64
	[plat] whalek,sharklj1,sharl3,sharkl5,roc1
	[field] make
	[subsys] reboot
	[must] user
	[function] Generic Syscon Reboot Driver
POWER_RESET_XGENE
	[arch] arm64
	[plat] whalek,sharklj1,sharl3,sharkl5,roc1
	[field] make
	[subsys] reboot
	[must] user
	[function] X-Gene SoC Reboot Driver
POWER_SUPPLY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] This allows power supply monitoring by userspace via sysfs.
PPP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. PPP (Point to Point Protocol) is a newer and better SLIP.
		  2. vts require
PPPOE
	[arch] all
	[plat] all_sp
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for PPP over Ethernet.
PPPOL2TP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for PPP-over-L2TP socket family. L2TP is a protocol
		used by ISPs and enterprises to tunnel PPP traffic over UDP
		tunnels. L2TP is replacing PPTP for VPN uses.
PPPOLAC
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. L2TP (RFC 2661) is a tunneling protocol widely used in virtual
		  private networks. 2. vts require
PPPOPNS
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. PPTP (RFC 2637) is a tunneling protocol widely used in virtual
		  private networks. 2. vts require
PPP_ASYNC
	[arch] all
	[plat] all_sp
	[field] menu,make
	[subsys] net
	[must] user
	[function] Say Y (or M) here if you want to be able to use PPP over standard
		asynchronous serial ports, such as COM1 or COM2 on a PC.  If you use
		a modem (not a synchronous or ISDN modem) to contact your ISP, you
		need this option.
PPP_BSDCOMP
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. Support for the BSD-Compress compression method for PPP,
		  which uses the LZW compression method to compress each PPP
		  packet before it is sent over the wire. 2. vts require
PPP_DEFLATE
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1. Support for the Deflate compression method for PPP, which
		  uses the Deflate algorithm (the same algorithm that gzip uses)
		  to compress each PPP packet before it is sent over the wire.
		  2. vts require
PPP_FILTER
	[arch] all
	[plat] all_sp
	[field] menu,code
	[subsys] net
	[must] user
	[function] Say Y here if you want to be able to filter the packets passing over
		PPP interfaces.  This allows you to control which packets count as
		activity (i.e. which packets will reset the idle timer or bring up
		a demand-dialed link) and which packets are to be dropped entirely.
		You need to say Y here if you wish to use the pass-filter and
		active-filter options to pppd.
PPP_MPPE
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] net
	[must] user
	[function] 1.  Support for the MPPE Encryption protocol, as employed by the
		  Microsoft Point-to-Point Tunneling Protocol. 2. vts require
PPP_MULTILINK
	[arch] all
	[plat] all_sp
	[field] menu,code
	[subsys] net
	[must] user
	[function] PPP multilink support
PPTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] depends on PPP && NET_IPGRE_DEMUX, Support for PPP over IPv4.(Point-to-Point Tunneling Protocol)
PREEMPT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] console
	[function] vts require, Preemptible Kernel (Low-Latency Desktop).
PREEMPT_COUNT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Statistics count of preempt.
PREEMPT_RCU
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] vts require, Enable kernel support rcu preempt.
PREEMPT_TRACER
	[arch] arm64
	[plat] sharkl3
	[field] code
	[subsys] core
	[must] user
	[function] Preemption-off Latency Tracer.
PREVENT_FIRMWARE_BUILD
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Prevent firmware from being built.
PRINTK
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable support for printk.
PRINTK_CPUID
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Add cpuid in kernel log.
PRINTK_PID
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Add PID in kernel log.
PRINTK_TIME
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Add time stamp in kernel log.
PROCESS_RECLAIM
	[arch] arm32
	[plat] sharkle32,pike2
	[field] make,code
	[subsys] mm
	[must] console
	[function] It allows to reclaim pages of  the process by
		   /proc/pid/reclaim.
PROC_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] /proc file system support.
PROC_PAGE_MONITOR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Various /proc files exist to monitor process memory
		   utilization: /proc/pid/smaps, /proc/pid/clear_refs,
		   /proc/pid/pagemap,/proc/kpagecount, and /proc/kpageflags
PROC_PID_CPUSET
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] vts require, Include legacy /proc/<pid>/cpuset file.
PROC_SYSCTL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] Sysctl support (/proc/sys).
PROC_UID
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] debug
	[function] Provides aggregated per-uid information under /proc/uid.
PROFILING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Profiling support.
PSTORE
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
PSTORE_CONSOLE
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
PSTORE_PMSG
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
PSTORE_RAM
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
PUBLIC_KEY_ALGO_RSA
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] RSA public-key algorithm
PWM
	[arch] all
	[plat] all
	[field] make
	[subsys] pwm
	[must] home
	[function] PWM device core driver.
PWM_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] pwm
	[must] home
	[function] Enable SPRD specific pwm driver.
PWM_SPRD_PMIC
	[arch] arm,arm64
	[plat] all
	[field] make,menu
	[subsys] pwm
	[must] home
	[function] Enable SPRD PMIC PWM
PWM_SYSFS
	[arch] all
	[plat] all
	[field] make
	[subsys] pwm
	[must] debug
	[function] Create pwm sysfs file for userspace.
QFMT_V2
	[arch] all
	[plat] sharkle64,isharkl2,sharkl2,sharkl3
	[field] make
	[subsys] fs
	[must] user
	[function] Quota format vfsv0 and vfsv1 support.
QOS_SECURE_SETTING
	[arch] arm,arm64
	[plat] pike2
	[field] make
	[subsys] misc
	[must] none
	[function] Support to set qos related registers through smc
QUOTA
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] none
	[function] Quota support,set per user limits for disk usage
QUOTACTL
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] none
	[function] Quota support
QUOTA_NETLINK_INTERFACE
	[arch] all
	[plat] sharkle64,isharkl2,sharkl2,sharkl3
	[field] make,code
	[subsys] fs
	[must] user
	[function] Report quota messages through netlink interface.
QUOTA_TREE
	[arch] all
	[plat] sharkle64,isharkl2,sharkl2,sharkl3
	[field] make
	[subsys] fs
	[must] user
	[function] Generic support for tree structured quota files.
RANDOMIZE_BASE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Randomize the address of the kernel image.
RANDOMIZE_MODULE_REGION_FULL
	[arch] all
	[plat] all
	[field] make
	[subsys] arch
	[must] console
	[function] Randomize the module region independently from the core kernel.
RAS
	[arch] all
	[plat] all
	[field] make
	[subsys] arch
	[must] console
	[function] Reliability, Availability and Serviceability (RAS) features.
RATIONAL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Calculate best rational approximation for a given fraction
			taking into account restricted register size.
RCU_CPU_STALL_TIMEOUT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] If a given RCU grace period extends more than the specified
		number of seconds, a CPU stall warning is printed.
RCU_STALL_COMMON
	[arch] all
	[plat] enu
	[field] menu
	[subsys] core
	[must] console
	[function] Enables RCU CPU stall code that is common between the TINY
		and TREE variants of RCU.
RD_BZIP2
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] core
	[must] console
	[function] Support initial ramdisks compressed using bzip2.
RD_GZIP
	[arch] all
	[plat] all
	[field] make
	[subsys] lib
	[must] console
	[function] CtsLiblogTestCases testcase needed, Support initial ramdisks compressed using gzip.
RD_LZMA
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make
	[subsys] core
	[must] console
	[function] Support initial ramdisks compressed using LZMA.
REED_SOLOMON
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] user
	[function] Support for reed solomon.
REED_SOLOMON_DEC8
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] user
	[function] Support reed solomon dec8.
REED_SOLOMON_ENC8
	[arch] all
	[plat] all
	[field] make
	[subsys] lib
	[must] user
	[function] CtsLiblogTestCases testcase needed
REGMAP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support regmap.
REGMAP_I2C
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support iic regmap.
REGMAP_IRQ
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support irq regmap.
REGMAP_MMIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support mmio regmap.
REGMAP_SPI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support spi regmap.
REGULATOR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] regulator
	[must] user
	[function] Generic Voltage and Current Regulator support.
REGULATOR_FAN53555
	[arch] all
	[plat] iwhale2,isharkl2,sharkl3
	[field] make,code
	[subsys] regulator
	[must] user
	[function] Support for fan53555 pmic regulator.
REGULATOR_FIXED_VOLTAGE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] regulator
	[must] user
	[function] This driver provides support for fixed voltage regulators
REGULATOR_SC2703
	[arch] all
	[plat] sharkl3
	[field] make,code
	[subsys] regulator
	[must] user
	[function] Support for sc2703 pmic regulator.
REGULATOR_SC2720
	[arch] all
	[plat] pike2
	[field] make,code
	[subsys] regulator
	[must] user
	[function] Support for sc2720 pmic regulator.
REGULATOR_SC2721
	[arch] all
	[plat] sharkl2,sharkl3,sharkle
	[field] make,code
	[subsys] regulator
	[must] user
	[function] Support for sc2721 pmic regulator.
RELAY
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] support for relay interface support in certain file systems
RELOCATABLE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] This builds the kernel as a Position Independent Executable (PIE),
		which retains all relocation metadata required to relocate the kernel binary
		at runtime to a different virtual address than the address it was linked at.
RESET_CONTROLLER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic Reset Controller support.
RFKILL
	[arch] all
	[plat] all
	[field] make
	[subsys] net/rfkill
	[must] user
	[function] have control over RF switches found on many WiFi and
		   Bluetooth cards
RFKILL_LEDS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] depends on RFKILL depends on LEDS_TRIGGERS = y || RFKILL = LEDS_TRIGGERS
RFKILL_PM
	[arch] all
	[plat] all
	[field] make
	[subsys] net/rfkill
	[must] user
	[function] Power off on suspend
RFS_ACCEL
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Accelerated RFS is to RFS what RSS is to RPS: a hardware-accelerated load
		balancing mechanism that uses soft state to steer flows based on where
		the application thread consuming the packets of each flow is running.
		Accelerated RFS should perform better than RFS since packets are sent
		directly to a CPU local to the thread consuming the data.
RING_BUFFER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] Necessary for ftrace, used for save data.
RING_BUFFER_ALLOW_SWAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Exchange two cpu ring buffer.
RING_BUFFER_STARTUP_TEST
	[arch] all
	[plat] all
	[field] make
	[subsys] trace
	[must] user
	[function] cts require,tracer config depends.
RPS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Receive Packet Steering (RPS) is logically a software implementation of
		RSS. Being in software, it is necessarily called later in the datapath.
		Whereas RSS selects the queue and hence CPU that will run the hardware
		interrupt handler, RPS selects the CPU to perform protocol processing
		above the interrupt handler. This is accomplished by placing the packet
		on the desired CPUs backlog queue and waking up the CPU for processing.
		RPS has some advantages over RSS: 1) it can be used with any NIC,
		2) software filters can easily be added to hash over new protocols,
		3) it does not increase hardware device interrupt rate (although it does
		introduce inter-processor interrupts (IPIs)).
RTC_CLASS
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] Generic RTC class support.
RTC_DRV_SPRD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] RTC driver for SPREADTRUM Real Time Clock controller.
RTC_HCTOSYS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] Set system time from RTC on startup and resume.
RTC_HCTOSYS_DEVICE
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] RTC used to set the system time.
RTC_INTF_DEV
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] /dev/rtcN (character devices).
RTC_INTF_PROC
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] /proc/driver/rtc (procfs for rtcN).
RTC_INTF_SYSFS
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] /sys/class/rtc/rtcN (sysfs).
RTC_LIB
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] RTC driver based on RTC lib.
RTC_START_YEAR
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] rtc
	[must] user
	[function] Set rtc counter start year.
RTC_SYSTOHC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] Set the RTC time based on NTP synchronization.
RTC_SYSTOHC_DEVICE
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] rtc
	[must] user
	[function] RTC used to synchronize NTP adjustment.
RT_GROUP_SCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Group scheduling for SCHED_RR/FIFO(vts require)
RT_MUTEXES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support RCU_BOOST.
RWSEM_SPIN_ON_OWNER
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Support rw lock.
RWSEM_XCHGADD_ALGORITHM
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Added rwsem xchage algorithm.
SC2342_INTEG
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] This is support wcn chip for spreadtrum.
SC2355
	[arch] all
	[plat] all
	[field] menu
	[subsys] wcn
	[must] user
	[function] This function is used to support wcn sc2355 chip
SC23XX
	[arch] all
	[plat] all
	[field] menu
	[subsys] msic
	[must] user
	[function] This function is used to support wcn sc23xx chip
		For pike2, this must be enable for buletooth.
SCHEDSTATS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Collect scheduler statistics
SCHED_DEBUG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Collect scheduler debugging info(Google needed)
SCHED_HRTICK
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] High Resolution Timer preemption tick
SCHED_INFO
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Collect scheduler  info
SCHED_MC
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Multi-core scheduler support
SCHED_STACK_END_CHECK
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] debug
	[function] Detect stack corruption on calls to schedule()
SCHED_TRACER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Scheduling Latency Tracer
SCHED_TUNE
	[arch] arm,arm64
	[plat] sharkL3
	[field] make,code
	[subsys] sched
	[must] user
	[function] Boosting for CFS tasks
SCHED_WALT
	[arch] arm,arm64
	[plat] sharkL3
	[field] make,code
	[subsys] sched
	[must] user
	[function] window based load tracking
SCSI
	[arch] all
	[plat] all
	[field] make,code
	[subsys] scsi
	[must] user
	[function] SCSI device support
SCSI_DMA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] scsi
	[must] user
	[function] SCSI device dma support
SCSI_MOD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] scsi
	[must] user
	[function] SCSI module support
SDCARD_FS
	[arch] all
	[plat] pike2
	[field] make
	[subsys] fs
	[must] user
	[function] This function is used to open sdcardfs feature
SDIOHAL
	[arch] 
	[plat] 
	[field] 
	[subsys] 
	[must] 
	[function] 
SECCOMP
	[arch] all
	[plat] all
	[field] make, code
	[subsys] core
	[must] user
	[function] Enable seccomp to safely compute untrusted bytecode.
	           vts require
SECCOMP_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Enable tasks to build secure computing
		environments defined in terms of Berkeley
		Packet Filter programs which implement
		task-defined system call filtering polices.
SECTION_MISMATCH_WARN_ONLY
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Make section mismatch errors non-fatal.
SECURITY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] user
	[function] vts require
SECURITY_NETWORK
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] user
	[function] vts require
SECURITY_PERF_EVENTS_RESTRICT
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] user
	[function] vts require, Restrict unprivileged use of performance events
SECURITY_SELINUX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] user
	[function] vts require
SECURITY_SELINUX_AVC_STATS
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] avc audit
SECURITY_SELINUX_CHECKREQPROT_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] lsm
SECURITY_SELINUX_DEVELOP
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] vts, cts, security
SEC_NFC
	[arch] arm
	[plat] sharkl2,sharkle32
	[field] make
	[subsys] nfc
	[must] none
	[function] enable sec nfc driver build in kernel
SEC_NFC_CLK_REQ
	[arch] arm
	[plat] sharkl2,sharkle32
	[field] code
	[subsys] nfc
	[must] none
	[function] enable this means sec nfc use AP CLK
SEC_NFC_IF_I2C
	[arch] arm
	[plat] sharkl2,sharkle32
	[field] code
	[subsys] nfc
	[must] none
	[function] enable this means sec nfc use i2c bus
SEC_NFC_PRODUCT_N5
	[arch] arm
	[plat] sharkl2,sharkle32
	[field] code
	[subsys] nfc
	[must] none
	[function] enable this means sec nfc is N5 series
SELECT_MEMORY_MODEL
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] The choice of the memory model depends on the ARCH_SELECT_MEMORY_MODEL.
SENSORS_BMA2X2
	[arch] all
	[plat] sharkle, sharklep
	[field] make
	[subsys] input
	[must] user
	[function] enable sensor bma253 driver built in kernel
SENSORS_BMA2X2_ENABLE_INT1
	[arch] all
	[plat] sharkle
	[field] make
	[subsys] input
	[must] user
	[function] This function is used to enable sensor interrupt
SERIAL_CORE
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enable serial core
SERIAL_CORE_CONSOLE
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enable serial core console
SERIAL_EARLYCON
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Support for early consoles with the earlycon parameter
SERIAL_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enables the driver for the Spreadtrum's serial
SERIAL_SPRD_CONSOLE
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Support for early debug console using Spreadtrum's serial
SERIO
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] make,code
	[subsys] tty
	[must] console
	[function] Serial I/O support.
SERIO_LIBPS2
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] make,code
	[subsys] tty
	[must] console
	[function] Serial I/O support.
SERIO_SERPORT
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] tty
	[must] console
	[function] Serial I/O support.
SETEND_EMULATION
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] The SETEND instruction alters the data-endianness of the
		AArch32 EL0, and is deprecated in ARMv8.
SHMEM
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybo_console
	[function] Use full shmem filesystem.
SIGNALFD
	[arch] all
	[plat] all
	[field] code
	[subsys] make,code
	[must] console
	[function] Enable the signalfd() system call that allows to receive signals
		on a file descriptor.
SLABINFO
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] Increase debug efficiency for memory covered issue,
		   depends on PROC_FS,depends on SLAB || SLUB_DEBUG
SLHC
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option enables Van Jacobsen serial line header
		  compression routines.
SLUB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Slub memory allocator
SLUB_CPU_PARTIAL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] SLUB per cpu partial cache.
SLUB_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] Increase debug efficiency for memory covered issue
SLUB_DEBUG_ON
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] Increase debug efficiency for memory covered issue,
		   depends on SLUB && SLUB_DEBUG
SLUB_STATS
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] SLUB statistics are useful to debug SLUBs allocation
		  behavior
SMART_RECLAIM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] none
	[function] When enabled,memory pages of background processes will
		   be reclaimed.
SMP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] home
	[function] Enable kernel support symmetric Multi-Processing.
SMP_ON_UP
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] home
	[function] Allow booting SMP kernel on uniprocessor systems.
SND
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] enable Advanced Linux Sound Architecture
SND_DRIVERS
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] audio moudle base config
SND_HDA_PREALLOC_SIZE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Pre-allocated buffer size for HD-audio driver
SND_HWDEP
	[arch] all
	[plat] all
	[field] make
	[subsys] snd-usb-audio
	[must] debug
	[function] This macro is selected when snd usb audio true
		   support USB Audio/MIDI driver.
SND_JACK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] This macro is selected when using headphone
SND_PCM
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] enable ALSA pcm
SND_PCM_TIMER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] PCM timer interface
SND_PROC_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Sound Proc FS Support
SND_RAWMIDI
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] sound Rawmidi interface
SND_SOC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] ALSA for SoC audio support
SND_SOC_I2C_AND_SPI
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] enable I2C and SPI bus for audio codec
SND_SOC_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user,cts,vts
	[function] audio moudle base config.
SND_SOC_SPRD_AUDIO_TWO_STAGE_DMAENGINE_SURPPORT
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2,isharkl2
	[field] make,code
	[subsys] sound
	[must] user,cts,vts
	[function] transform data from cpu_dai to codec_dai.
SND_SOC_SPRD_CODEC_SC2721
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2
	[field] make,code
	[subsys] sound
	[must] user,cts,vts
	[function] enable codec2721.
SND_SOC_SPRD_I2S
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2,isharkl2
	[field] make
	[subsys] sound
	[must] user,cts,vts
	[function] enable iis real driver.
SND_SOC_SPRD_I2S_DUMMY
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2,isharkl2
	[field] make
	[subsys] sound
	[must] user,cts,vts
	[function] enable i2s dummy driver.
SND_SOC_SPRD_I2S_SMARTPA
	[arch] arm
	[plat] sharklefp
	[field] make
	[subsys] sound
	[must] user
	[function] ASoC Spreadtrum sound card with AP I2S and smartpa
SND_SOC_SPRD_R1P0V3_SC2721
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2
	[field] make
	[subsys] sound
	[must] user,cts,vts
	[function] machine part of audio to connect cpudai, platform, codec.
SND_SOC_SPRD_VAUDIO
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user,cts,vts
	[function] enable VAUDIO.
SND_SOC_SPRD_VBC_R1P0V3
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2
	[field] make
	[subsys] sound
	[must] user,cts,vts
	[function] enable audio vbc.
SND_SOC_TFA98XX
	[arch] arm
	[plat] sharklefp
	[field] make
	[subsys] sound
	[must] user
	[function] enable NXP TFA98XX smart amplifier
SND_SUPPORT_OLD_API
	[arch] all
	[plat] sharkle,sharkle32,sharkl2,sharkl3,pike2
	[field] make,code
	[subsys] sound
	[must] user
	[function] Support old ALSA API
SND_TIMER
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] Support snd sound timer
SND_USB
	[arch] all
	[plat] all
	[field] config
	[subsys] snd
	[must] debug
	[function] This macro is used to support USB sound devices
SND_USB_AUDIO
	[arch] all
	[plat] all
	[field] make
	[subsys] snd
	[must] debug
	[function] This macro is used to support USB Audio/MIDI driver
SND_VERBOSE_PROCFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Verbose procfs contents
SOC_PIKE2
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] arch
	[must] user
	[function] Used for pike2 device.
SOC_ROC1
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] arch
	[must] user
	[function] Used for roc1 device.
SOC_SHARKL3
	[arch] arm64
	[plat] sharkl3
	[field] make
	[subsys] arch
	[must] user
	[function] Used for sharkl3 device.
SOC_SHARKLE
	[arch] arm,arm64
	[plat] sharkle
	[field] make
	[subsys] arch
	[must] user
	[function] Used for sharkle device.
SOUND
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] Sound card support
SPARSEMEM
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function]  Sparsemem memory model.
SPARSEMEM_EXTREME
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem memory model-related configuration items.
SPARSEMEM_MANUAL
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem memory model-related configuration items.
SPARSEMEM_VMEMMAP
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparse Memory virtual memmap.
SPARSEMEM_VMEMMAP_ENABLE
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem memory model-related configuration items.
SPARSE_IRQ
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Sparse irq numbering is useful for distro kernels that want
		to define a high CONFIG_NR_CPUS value but still want to have
		low kernel memory footprint on smaller machines.
CRYPTO_SPECK
        [arch] arm
        [plat] pike2
        [field] menu
        [subsys] security
        [must] user
        [function] Needed by others.
CRYPTO_SPECK_NEON
        [arch] arm
        [plat] pike2
        [field] menu
        [subsys] security
        [must] user
        [function] NEON accelerated Speck cipher algorithms.
SPI
	[arch] all
	[plat] all
	[field] make
	[subsys] spi
	[must] user
	[function] SPI support
SPI_BITBANG
	[arch] all
	[plat] sharkle,sharkl2,whale2,sharklj1,sharkl3,pick2,isharkl2
	[field] make
	[subsys] spi
	[must] user
	[function] Utilities for Bitbanging SPI masters
SPI_MASTER
	[arch] all
	[plat] all
	[field] make
	[subsys] spi
	[must] user
	[function] SPI Master Support
SPI_PL022
	[arch] arm64
	[plat] sharkl3
	[field] make
	[subsys] spi
	[must] user
	[function] This selects the ARM(R) AMBA(R) PrimeCell PL022 SSP controller.
SPI_SPRD
	[arch] all
	[plat] sharkle,sharkl2,sharkl5,whale2,sharklj1,sharkl3,pick2,isharkl2
	[field] make
	[subsys] spi
	[must] user
	[function] Enable spreadtrum SPI controller
SPI_SPRD_ADI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] spi
	[must] user
	[function] Spreadtrum ADI controller based on SPI.
SPLIT_PTLOCK_CPUS
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Set the number of startup ARM cores.
SPRD_7SRESET
	[arch] all
	[plat] all
	[field] make,code
	[subsys] misc
	[must] user
	[function] support for 7Sreset of PMIC.
SPRD_ADC
	[arch] all
	[plat] pike2 | sharkl2 | sharkle | sharklj1 | sharkl3
	[field] make
	[subsys] iio
	[must] user
	[function] This function add spreadtrum adc module to get adc value.
SPRD_AON_BUSMON
	[arch] all
	[plat] sharkl2,isharkl2,whale2
	[field] make
	[subsys] soc
	[must] user
	[function] Support aon busmonitor
SPRD_ARM32_SMP_WITH_PSCI
	[arch] arm
	[plat] pike2,sharkl2,sharkle
	[field] make
	[subsys] soc
	[must] user
	[function] This function is used to enable sprd aarch32 hotplug with security
SPRD_AUDIO_MEMORY_MANAGER
	[arch] all
	[plat] all
	[field] make
	[subsys] misc
	[must] user,cts,vts
	[function] For Audio Memory Manager Support.
SPRD_AUDIO_SAUDIO
	[arch] all
	[plat] sharkle32,sharkle,sharkl2,sharklj1,pike2,isharkl2
	[field] make
	[subsys] misc
	[must] user,cts,vts
	[function] For audio voip voice.
SPRD_BOARD_THERMAL
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] This function is used to enable thermal moudle for get board temp
SPRD_BUSMONITOR
	[arch] all
	[plat] sharkle,pike2,sharkl2,whale2,sharklj1,sharkl3
	[field] make
	[subsys] soc
	[must] user
	[function] Support debug busmonitor
SPRD_CAMERA
	[arch] all
	[plat] all
	[field] make
	[subsys] misc
	[must] user
	[function] Enable camera function.
SPRD_CAMERA_CPP_DCAM_R6P0
	[arch] arm,arm64
	[plat] pike2
	[field] make
	[subsys] misc
	[must] user
	[function] Enable dcam function.
SPRD_CAMERA_CPP_LITE_R3P0
	[arch] arm,arm64
	[plat] sharkle
	[field] make
	[subsys] misc
	[must] user
	[function] Enable cpp function.
SPRD_CAMERA_CPP_LITE_R4P0
	[arch] arm,arm64
	[plat] sharkl3
	[field] make
	[subsys] misc
	[must] user
	[function] Enable cpp function.
SPRD_CAMERA_CSI_R2P0
	[arch] arm,arm64
	[plat] pike2
	[field] make
	[subsys] misc
	[must] uesr
	[function] Enable csi function.
SPRD_CAMERA_CSI_R2P0V2
	[arch] arm,arm64
	[plat] sharkle
	[field] make
	[subsys] misc
	[must] user
	[function] Enable csi function.
SPRD_CAMERA_CSI_RECEIVER_R2P0
	[arch] arm,arm64
	[plat] sharkl3
	[field] make
	[subsys] misc
	[must] user
	[function] Enable csi function.
SPRD_CAMERA_DCAM_IF_R4P0
	[arch] arm,arm64
	[plat] sharkle
	[field] make
	[subsys] misc
	[must] user
	[function] Enable dcam function.
SPRD_CAMERA_DCAM_IF_R5P0_ISP_R6P12
	[arch] arm,arm64
	[plat] sharkl3,sharklEP
	[field] make
	[subsys] misc
	[must] user
	[function] Enable isp function.
SPRD_CAMERA_DCAM_R6P0
	[arch] arm,arm64
	[plat] sharkl2,sharklJ1
	[field] make
	[subsys] misc
	[must] user
	[function] Enable isp function.
SPRD_CAMERA_ISP_R6P11
	[arch] arm,arm64
	[plat] sharkle
	[field] make
	[subsys] misc
	[must] user
	[function] Enable isp function.
SPRD_CAMERA_ISP_R6P91
	[arch] arm,arm64
	[plat] pike2
	[field] make
	[subsys] misc
	[must] user
	[function] Enable isp function.
SPRD_CAM_PW_DOMAIN_R4P0
	[arch] arm,arm64
	[plat] pike2
	[field] make
	[subsys] misc
	[must] user
	[function] Enable camera power domain function.
SPRD_CAM_PW_DOMAIN_R5P0
	[arch] arm,arm64
	[plat] sharkle
	[field] make
	[subsys] misc
	[must] user
	[function] Enable camera power domain function.
SPRD_CPROC
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2
	[field] make
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd cproc module for modem boot.
SPRD_CPU_COOLING_DEVICE
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Create cpu cooling device node and build power model for IPA.
SPRD_CPU_HOTPLUG_GOV
	[arch] all
	[plat] all
	[field] make
	[subsys] cpu hotplug
	[must] user
	[function] Enable cpu hotplug based on PM_QoS for IPA, powerhint and etc.
SPRD_CPU_USAGE
	[arch] all
	[plat] all
	[field] make
	[subsys] sprd_deubg
	[must] debug
	[function] This function is used to record cpu usage for each cpu.
		   For platform arm & arm64, it can count cpu usage per task.
SPRD_DEBUG
	[arch] all
	[plat] all_sp
	[field] code,make,menu
	[subsys] soc
	[must] debug
	[function] Enable/disable sprd debug function.
SPRD_DEEPSLEEP_PIKE2
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] soc
	[must] user
	[function] Enable pike2 deep sleep function.
SPRD_DEEPSLEEP_SHARKL3
	[arch] arm64
	[plat] sharkl3
	[field] make
	[subsys] soc
	[must] user
	[function] Enable sharkl3 deep sleep function.
SPRD_DEEPSLEEP_SHARKLE
	[arch] arm,arm64
	[plat] sharkle32,sharkle
	[field] make
	[subsys] soc
	[must] user
	[function] Enable sharkle deep sleep function.
SPRD_DJTAG
	[arch] all
	[plat] sharkl3 sharkle
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable Djtag function
SPRD_DJTAG_CORE
	[arch] all
	[plat] sharkl3 sharkle
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable Djtag core function
SPRD_DMA
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support Spreadtrum DMA.
SPRD_DMC_DRV
	[arch] all
	[plat] sharkl2,sharklj1,sharkle,pike2,sharkl3
	[field] make
	[subsys] debug
	[must] user
	[function] Enable ddr capacity get function
SPRD_DMC_MPU_CORE
	[arch] all
	[plat] sharkl3
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable MPU core function
SPRD_DMC_MPU_R3P0
	[arch] all
	[plat] sharkle, pike2
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable MPU R3P0 debug function
SPRD_DMC_MPU_R4P0
	[arch] all
	[plat] sharkl3
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable MPU R4P0 debug function
SPRD_EIRQSOFF
	[arch] all
	[plat] all_sp
	[field] code,make
	[subsys] core
	[must] debug
	[function] Debug irq off.
SPRD_GSP
	[arch] all
	[plat] all
	[field] make
	[subsys] media
	[must] none
	[function] This function is used to enable gsp
SPRD_IMS_BRIDGE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option adds ims stack bridge support to
		  the kernel. We will *route* the packets to the proper
		  interface and ims stack, and all of these are
		  transparent to the ims stacks.
SPRD_IMS_BRIDGE_TEST
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] debug
	[function] Support for ims bridge kernel test suite.
SPRD_IOMMU
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] home
	[function] This macro is to support Sprd iommu.
SPRD_IQ
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable wcdma iq log function.
SPRD_JPG
	[arch] all
	[plat] all
	[field] make
	[subsys] misc
	[must] user
	[function] This function is used to enable sprd jpg dev.
SPRD_LAST_REGS
	[arch] all
	[plat] all_sp
	[field] make
	[subsys] soc
	[must] debug
	[function] Enable sprd last registers function.
SPRD_MAILBOX
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd mailbox module.
SPRD_MAILBOX_FIFO
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] code
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd mailbox fifo feature.
SPRD_MAILBOX_SENSOR
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] code
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd mailbox sensor core.
SPRD_MEMDISK
	[arch] all_bringup
	[plat] all_bringup
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for memdisk. Enable on haps bringup, Disable on chipback.
SPRD_MIPI_LOG_R2P0
	[arch] all
	[plat] sharkle
	[field] make
	[subsys] staging
	[must] debug
	[function] This function is used to enable modem MIPI log function
		   for modem log capture.
SPRD_MIPI_LOG_R4P2
	[arch] all
	[plat] sharkl3
	[field] make
	[subsys] staging
	[must] debug
	[function] This function is used to enable modem MIPI log function
		   for modem log capture.
SPRD_MODEM_DEBUG
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] debug
	[function] Enable debug log core feature for sprd.
SPRD_PERFORMANCE
	[arch] arm,arm64
	[plat] pike2,sharkl2,sharklj1,whale2,isharkl2
	[field] make
	[subsys] soc
	[must] debug
	[function] Enable sprd performance bus monitor.
SPRD_PMIC_WATCHDOG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] watchdog
	[must] user
	[function] PMIC watchdog is triggered, PMIC system, AP system and modem systemare both reset by power.
SPRD_PTM
	[arch] all
	[plat] sharkle,sharkl3,sharkl5,roc1,orca
	[field] make
	[subsys] debug
	[must] debug
	[function] Support Spreadtrum PTM.
SPRD_REG_ACCESS_32BITS
	[arch] arm,x86
	[plat] pike2,sharkl2,sharklj1,whale2,isharkl2,sharkle
	[field] make
	[subsys] soc
	[must] user
	[function] Spreadtrum register access 32bit alinged.
SPRD_SC2720_ADC
	[arch] all
	[plat] pike2
	[field] make
	[subsys] iio
	[must] user
	[function] This function add spreadtrum adc module to get adc value.
SPRD_SENSOR_HUB
	[arch] all
	[plat] sharkl3, isharkl2
	[field] make
	[subsys] iio
	[must] user
	[function] enable sensor hub driver built in kernel
SPRD_SHARKL3_USB2_PHY
	[arch] arm
	[plat] sharkl3
	[field] make
	[subsys] usb
	[must] user
	[function] sharkl3 phy driver
SPRD_SIPC
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable sipc function between modem and AP.
SPRD_SIPC_GNSS_STTY
	[arch] all
	[plat] pike2,sharkle,sharkl3-1
	[field] make
	[subsys] wcn
	[must] user
	[function] sprd wcn intergate GNSS support
SPRD_SIPC_MEM_CACHE_EN
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] code
	[subsys] staging
	[must] user
	[function] This function is used to enable sipx share memmory cache.
SPRD_SIPC_SETH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This driver supports the Spreadtrum Ethernet based on share memory.
SPRD_SIPC_SETH_RAWIP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function]  Support using zero copy rawip transfer
SPRD_SIPC_SPIPE
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] make
	[subsys] staging
	[must] user
	[function] This function is used to enable spipe function.
SPRD_SIPC_SPOOL
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable spool function.
SPRD_SIPC_SWCNBLK
	[arch] arm,arm64
	[plat] sharkle32,sharkle,pike2
	[field] make,code
	[subsys] staging
	[must] user
	[function] This function is used to enable wcnblk function for wifi ht.
SPRD_SIPC_WCN
	[arch] all
	[plat] all
	[field] code
	[subsys] sipc
	[must] user
	[function] no use,can delete
SPRD_SIPC_ZERO_COPY_SIPX
	[arch] all
	[plat] pike2,sharkl2,sharkl3,sharklj1,whale2,isharkl2
	[field] make
	[subsys] staging
	[must] user
	[function] This function is used to enable sipx function between modem and AP.
SPRD_SYSDUMP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] soc
	[must] user
	[function] This function is used to enable sprd sysdump feature
		   that dump the DDR except reserved memory.
SPRD_THERMAL
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] This function is used to enable thermal moudle
SPRD_THERMAL_DEDICATE
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] This function is used to enable thermal moudle for get temp
SPRD_USB2_PHY
	[arch] arm
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support SPRD USB2 PHY.
SPRD_VIBRATOR
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] home
	[function] This function is used to enable vibrator
SPRD_VOICETRIGGER_DRIVER
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] sprd voicetrigger realtek rt5512 driver
SPRD_VSP
	[arch] arm,arm64
	[plat] all
	[field] make
	[subsys] misc
	[must] user
	[function] Enable vsp module.
SPRD_VSP_PW_DOMAIN_R6P0
	[arch] arm,arm64
	[plat] sharkl2,sharklj1,pike2
	[field] make
	[subsys] misc
	[must] user
	[function] Enable vsp power domain function.
SPRD_VSP_PW_DOMAIN_R7P0
	[arch] arm64
	[plat] sharkl3
	[field] make
	[subsys] misc
	[must] user
	[function] Enable vsp power domain function.
SPRD_WAKEUPEN_INTC
	[arch] arm,arm64
	[plat] pike2,sharkle32,sharkl2,sharkl3,sharkle
	[field] code
	[subsys] core
	[must] console
	[function] SPRD wakeupen interrupt controller interface.
SPRD_WATCHDOG_SYS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] watchdog
	[must] user
	[function] add ap sys watchdog.
SRCU
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Selects the sleepable version of RCU.
SSB_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support for SSB(Sonics Silicon Backplane).
STACKTRACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] console
	[function] Stack backtrace support.
STACKTRACE_SUPPORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Keep stack trace of persistent data block lock holders.
STACK_TRACER
	[arch] all
	[plat] all
	[field] code,make
	[subsys] core
	[must] debug
	[function] Support stack tracer.
STAGING
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support kernel Staging drivers.
STANDALONE
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Select only drivers that don't need compile-time external firmware.
SUNWAVE_FINGERPRINT
	[arch] arm,arm64
	[plat] sharkle32,sharklep
	[field] make
	[subsys] input
	[must] none
	[function] enable sunwave fingerprint driver build in kernel
SUSPEND
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Suspend to RAM and standby.
SUSPEND_FREEZER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Enable freezer for suspend to RAM/standby.
SWAP
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Support for paging of anonymous memory.
SWAP_ZDATA
	[arch] arm
	[plat] sharkle,pike2
	[field] make,code
	[subsys] mm
	[must] none
	[function] Save compressed data to swap page.And user space
		   can send a SIGUSER2 to reclaiming task to break
		   process reclaim for starting apps quikly whose
		   memory is reclaiming.
SWIOTLB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support switch IO TLB.
SWP_EMULATE
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] make,code
	[subsys] core
	[must] console
	[function] Emulate SWP/SWPB instructions.
SWP_EMULATION
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Emulate SWP/SWPB instructions.
SW_SYNC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support Software synchronization objects.
SYNC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Support for Synchronization framework.
SYN_COOKIES
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] SYN cookies provide protection against SYN flooding attack.
SYSCTL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support the sysctl.
SYSCTL_EXCEPTION_TRACE
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Enable support for /proc/sys/debug/exception-trace.
SYSCTL_SYSCALL
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Sysctl syscall support.
SYSFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] sysfs file system support.
SYSFS_SYSCALL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] console
	[function] Support sysfs system call.
SYSTEM_MODIFY_OOM_ADJ
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] allow system server to modify oom_adj.
SYSTEM_TRUSTED_KEYRING
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] Provide system-wide ring of trusted keys, following pixel2.
SYSTEM_TRUSTED_KEYS
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] Additional X.509 keys for default system keyring
SYS_SUPPORTS_APM_EMULATION
	[arch] arm
	[plat] pike2,sharkl2,sharkle32
	[field] menu
	[subsys] core
	[must] console
	[function] This config select by ARM.
SYS_SUPPORTS_HUGETLBFS
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] android4.4
	[function] Grants system server access to /proc/<pid>/oom_adj
		   for Android applications.it is needed by android4.4.
TASKSTATS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Export task/process statistics through netlink.
TASK_IO_ACCOUNTING
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable per-task storage I/O accounting.
TASK_XACCT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable extended accounting over taskstats.
TCP_CONG_CUBIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This is version 2.0 of BIC-TCP which uses a cubic growth function among other techniques.
TCP_MD5SIG
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Giving MD5 protection to TCP sessions
TEXTSEARCH
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for txt search.
TEXTSEARCH_BM
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Boyer-Moore text search.
TEXTSEARCH_FSM
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] A naive finite state machine text search approach.
TEXTSEARCH_KMP
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support Knuth-Morris-Pratt text search.
THERMAL
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] kernel thermal core framework
THERMAL_DEFAULT_GOV_POWER_ALLOCATOR
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Set default thermal governor as power allocator.
THERMAL_GOV_POWER_ALLOCATOR
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Power allocator thermal governor.
THERMAL_GOV_STEP_WISE
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] default thermal governor
THERMAL_OF
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] kernel thermal core framework
THERMAL_WRITABLE_TRIPS
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Enable writable trip points.
THREAD_INFO_IN_TASK
	[arch] arm64
	[plat] sharkle,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Select this to move thread_info off the stack into task_struct.  To
		make this work, an arch will need to remove all thread_info fields
		except flags and fix any runtime bugs.
TICK_CPU_ACCOUNTING
	[arch] all
	[plat] all
	[field] menu
	[subsys] time
	[must] debug
	[function] Simple tick based cputime accounting.
TICK_ONESHOT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] time
	[must] console
	[function] This is only related to the tick functionality.
TIMERFD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Enable the timerfd() system call that allows to receive timer
		events on a file descriptor.
TIMER_STATS
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] debug
	[function] Collect kernel timers statistics, disable on user version.
TMPFS
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] busybox_console
	[function] Tmpfs virtual memory file system support. Tmpfs is a
		   file system which keeps all files in virtual memory.
TMPFS_POSIX_ACL
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] busybox_console
	[function] Tmpfs POSIX Access Control Lists.
TMPFS_XATTR
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] busybox_console
	[function] Tmpfs extended attributes.
TOUCHSCREEN_ADAPTIVE
	[arch] arm,arm64
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] adaptive touchscreen driver
TOUCHSCREEN_ADAPTIVE_VENDOR_FOCALTECH
	[arch] arm,arm64
	[plat] all
	[field] make
	[subsys] input
	[must] unknown
	[function] This macro is to control the TP driver compilation.
TOUCHSCREEN_ADAPTIVE_VENDOR_MSTAR
	[arch] arm,arm64
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] MStar controller definition for adaptive touchscreen
TOUCHSCREEN_MSG2XXX_TS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] MSG2xxx touchscreen driver
TOUCHSCREEN_PROPERTIES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] touchscreen of interface
TRACEPOINTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Place an empty function call at each tracepoint site.
TRACER_MAX_TRACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Maxsize of trace, Maxsize report of sched, irq, trace.
TRACER_SNAPSHOT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Create a snapshot trace buffer
TRACER_SNAPSHOT_PER_CPU_SWAP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Allow snapshot to swap per CPU
TRACE_CLOCK
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] Report clock of trace.
TRACE_IRQFLAGS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Enable/disable irq flags trace.
TRACE_IRQFLAGS_SUPPORT
	[arch] all
	[plat] all
	[field] code,menu
	[subsys] core
	[must] debug
	[function] Support irq flags trace.
TRACING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] To avoid circular dependencies to accomplish the hiding of the automatic options.
TRACING_EVENTS_GPIO
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Trace gpio events
TRACING_SUPPORT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] Minsize of trace in arch, if enable ftrace, this is necessary.
TRUSTY
	[arch] arm,arm64
	[plat] sharkl2,pike2,sharklj1,sharkle,sharkle32,sharklep,sharkl3
	[field] make,code
	[subsys] tee
	[must] home
	[function] This is the top config option of trusty driver which supports
			  communication between linux and trusty OS.
		  Trusty driver is used on all ARM architecture-based platforms
		  with trusty OS integrated
TRUSTY_LOG
	[arch] arm,arm64
	[plat] sharkl2,pike2,sharklj1,sharkle,sharkle32,sharklep,sharkl3
	[field] make
	[subsys] tee
	[must] debug
	[function] This is used to dump trusty OS log and output to kernel log
TRUSTY_VIRTIO
	[arch] arm,arm64
	[plat] sharkl2,pike2,sharklj1,sharkle,sharkle32,sharklep,sharkl3
	[field] make
	[subsys] tee
	[must] home
	[function] This implements trusty virtio driver which works with the
		   back-end virtio driver in trusty OS
TRUSTY_VIRTIO_IPC
	[arch] arm,arm64
	[plat] sharkl2,pike2,sharklj1,sharkle,sharkle32,sharklep,sharkl3
	[field] make
	[subsys] tee
	[must] home
	[function] This implements trusty IPC driver based on trusty virtio
TTY
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enable TTY
TUN
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Universal TUN/TAP device driver support
UBIFS_FS
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] UBIFS file system support
UBIFS_FS_ADVANCED_COMPR
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] UBIFS advanced compression options
UBIFS_FS_LZO
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] UBIFS advanced compression used lzo
UBIFS_FS_ZLIB
	[arch] arm
	[plat] sharklefp
	[field] make,code
	[subsys] mtd
	[must] user
	[function] UBIFS advanced compression used zlib
UEVENT_HELPER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for uevent helper.
UEVENT_HELPER_PATH
	[arch] all
	[plat] all
	[field] code
	[subsys] udev
	[must] console
	[function] path to uevent helper. Set to null.
UHID
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] User-space I/O driver support for HID subsystem
UID16
	[arch] all
	[plat] sharkle,sharkl3,sharkle32,pike2
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable 16-bit UID system calls.
UID_SYS_STATS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] vts require, Per-UID statistics
UNCOMPRESS_INCLUDE
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] debug
	[must] console
	[function] Support for compress include path. Set to "debug/uncompress.h".
UNINLINE_SPIN_UNLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Enable uninlie spin.
UNIX
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, support for Unix domain sockets
UNIX98_PTYS
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] user
	[function] Support unix98 PTY
UNMAP_KERNEL_AT_EL0
	[arch] arm64
	[plat] sharkl3,sharkle,whale2,whalek
	[field] code
	[subsys] arch
	[must] user
	[function] meltdown/spectre fix
USB
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB Core files and filesystem
USB_ACM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] USB host side ACM function.
USB_ANNOUNCE_NEW_DEVICES
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] debug
	[function] USB announce new devices info.
USB_ARCH_HAS_HCD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB host feature.
USB_CHARGER
	[arch] arm
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support USB charger.
USB_COMMON
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] Provides code common for host and device side USB.
USB_CONFIGFS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] A Linux USB "gadget" can be set up through configfs.
USB_CONFIGFS_ACM
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support Abstract Control Model (CDC ACM).
USB_CONFIGFS_ECM
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support Ethernet Control Model (CDC ECM).
USB_CONFIGFS_ECM_SUBSET
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support Ethernet Control Model (CDC ECM) subset.
USB_CONFIGFS_EEM
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] unknown
	[function] This macro is to support Ethernet Emulation Model (EEM).
USB_CONFIGFS_F_ACC
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] USB gadget Accessory support
USB_CONFIGFS_F_AUDIO_SRC
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] USB gadget Audio Source support.
USB_CONFIGFS_F_FS
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] Function filesystem (FunctionFS)
USB_CONFIGFS_F_HID
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support HID function.
USB_CONFIGFS_F_MIDI
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] The MIDI Function acts as a USB Audio device.
USB_CONFIGFS_F_MTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] USB gadget MTP support.
USB_CONFIGFS_F_PTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] USB gadget PTP support.
USB_CONFIGFS_F_VSERIAL
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support vendor serial.
USB_CONFIGFS_MASS_STORAGE
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support USB Mass storage.
USB_CONFIGFS_NCM
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support Network Control Model (CDC NCM).
USB_CONFIGFS_OBEX
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] unknown
	[function] This macro is to support Object Exchange Model (CDC OBEX).
USB_CONFIGFS_RNDIS
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support usb RNDIS function.
USB_CONFIGFS_SERIAL
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support Generic serial bulk in/out.
USB_CONFIGFS_UEVENT
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] Uevent notification of Gadget state.
USB_DEFAULT_PERSIST
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] Enable USB persist by default for PM.
USB_EHCI_HCD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] EHCI is standard for USB 2.0 host controller hardware.
USB_EHCI_HCD_PLATFORM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Generic EHCI driver for a platform device.
USB_EHCI_PCI
	[arch] all
	[plat] roc1
	[field] make,code
	[subsys] usb
	[must] user
	[function]  Default y, depends on PCI.
USB_EHCI_TT_NEWSCHED
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] Improved Transaction Translator scheduling.
USB_F_ACC
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget Accessory support
USB_F_ACM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] ACM serial link.
USB_F_AUDIO_SRC
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget Audio Source support.
USB_F_ECM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] "Communication Device Class" (CDC) Ethernet Control Model.
USB_F_EEM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] This macro is to support Ethernet Emulation Model (EEM).
USB_F_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] Function filesystem (FunctionFS)
USB_F_HID
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support usb host function.
USB_F_MASS_STORAGE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support USB Mass storage.
USB_F_MIDI
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] The MIDI Function acts as a USB Audio device.
USB_F_MTP
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget MTP support.
USB_F_NCM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Network Control Model (CDC NCM).
USB_F_OBEX
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] This macro is to support Object Exchange Model (CDC OBEX).
USB_F_PTP
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget PTP support.
USB_F_RNDIS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget RNDIS support.
USB_F_SERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget SERIAL support.
USB_F_SUBSET
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] "CDC Subset" Ethernet link function driver.
USB_F_VSERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget VSERIAL support.
USB_GADGET
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB Gadget Support
USB_GADGET_DEBUG_FILES
	[arch] all
	[plat] sharkle32
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support gadget debug info.
USB_GADGET_STORAGE_NUM_BUFFERS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] Number of storage pipeline buffers
USB_GADGET_VBUS_DRAW
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] Maximum VBUS Power usage (2-500 mA).
USB_HID
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB human interface device (HID) support
USB_HIDDEV
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] /dev/hiddev raw HID device support
USB_ISP1760
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] ISP1760 USB host controller
USB_ISP1760_HCD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] ISP1760 USB host controller
USB_ISP1760_HOST_ROLE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] ISP1760 USB host controller
USB_LIBCOMPOSITE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] composite based drivers
USB_MON
	[arch] all
	[plat] sharkle32
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to suppor usb monitor peripheral.
USB_MUSB_DUAL_ROLE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB Dual Role mode support.
USB_MUSB_GADGET
	[arch] all
	[plat] pike2
	[field] make
	[subsys] usb
	[must] user
	[function] Select this when you want to use MUSB in gadget mode only.
USB_MUSB_HDRC
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Inventra Highspeed Dual Role Controller (TI, ADI, AW, ...).
USB_MUSB_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to suppor SPRD platforms musb driver.
USB_OHCI_HCD
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support OHCI HCD (USB 1.1).
USB_OHCI_HCD_PLATFORM
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Generic OHCI driver for a platform device.
USB_OHCI_LITTLE_ENDIAN
	[arch] arm
	[plat] pike2
	[field] make
	[subsys] usb
	[must] user
	[function] A controller type.
USB_OTG_WAKELOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to hold a wakelock when USB connected.
USB_PHY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support USB Physical Layer drivers.
USB_SERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] USB serial mode on host mode
USB_SPRD_DMA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support SPRD DMA mode.
USB_SPRD_DMA_V3
	[arch] all
	[plat] sharkle,sharkl3,roc1
	[field] make,code
	[subsys] usb
	[must] user
	[function] DMA VERSION V3.
USB_SPRD_TYPEC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to control the TYPEC driver compilation.
USB_STORAGE
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] This macro is to support USB Mass Storage support.
USB_SUPPORT
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] This option adds core support for Universal Serial Bus (USB).
USB_U_ETHER
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] u_ether.c -- Ethernet-over-USB link layer utilities for Gadget stack
USB_U_SERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] u_serial.c -- utilities for USB gadget "serial port"/TTY support
USE_OF
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] Flattened Device Tree support.
VDSO
	[arch] all
	[plat] all
	[field] code
	[subsys] soc
	[must] user
	[function] Enable VDSO for acceleration of some system calls.
VECTORS_BASE
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] code
	[subsys] core
	[must] console
	[function] The base address of exception vectors.  This must be two pages
		in size.
VFAT_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] This option provides support for normal Windows file
		   systems with long filenames.
VFP
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make,code
	[subsys] core
	[must] console
	[function] VFP-format floating point maths.
VFPv3
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] code
	[subsys] core
	[must] console
	[function] VFPV3-format floating point maths.
VIDEOMODE_HELPERS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] video
	[must] home
	[function] Helper function for parsing lcd video parameters.
VIRTIO
	[arch] all
	[plat] sharkle64
	[field] make
	[subsys] net
	[must] user
	[function] This option is selected by any driver which implements
		  the virtio bus, such as CONFIG_VIRTIO_PCI,
		  CONFIG_VIRTIO_MMIO, CONFIG_LGUEST, CONFIG_RPMSG
		  or CONFIG_S390_GUEST.
VIRTIO_MMIO
	[arch] all
	[plat] sharkle64
	[field] make
	[subsys] net
	[must] user
	[function] This drivers provides support for memory mapped
		  virtio platform device driver.
VIRTIO_NET
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] It is the virtual network driver for virtio.
VMSPLIT_3G
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] code
	[subsys] mm
	[must] console
	[function] Set the memory limit between userspace and kernelspace.
VM_EVENT_COUNTERS
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Enable VM event counters for /proc/vmstat.
WAKELOCK
	[arch] all
	[plat] all
	[field] menu
	[subsys] power
	[must] user
	[function] USB_OTG_WAKELOCK depends on it.
WATCHDOG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic Watchdog Controller support.
WCN_BOOT
	[arch] all
	[plat] all
	[field] make
	[subsys] wcn
	[must] user
	[function] wcn boot up for 2355 chip.
WCN_PLATFORM
	[arch] all
	[plat] pike2,sharkle,sharkl3-1
	[field] make,code
	[subsys] wcn
	[must] user
	[function] wcn intergation 2342 chip support
WCN_SIPC
	[arch] all
	[plat] pike2,sharkle,sharkl3-1
	[field] make
	[subsys] wcn
	[must] user
	[function] WCN integration chip 2342 sipc Support
WCN_SLP
	[arch] all
	[plat] all
	[field] make
	[subsys] wcn
	[must] user
	[function] wcn sleep and wakeup for 2355 chip
WCN_UTILS
	[arch] all
	[plat] all
	[field] make
	[subsys] wcn
	[must] user
	[function] debug tool for wcn chip
WIRELESS
	[arch] all
	[plat] all
	[field] make
	[subsys] wireless
	[must] user
	[function] wireless support
WLAN
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This section contains all the pre 802.11 and 802.11 wireless
		device drivers. For a complete list of drivers and documentation
		on them refer to the wireless wiki:
WQ_POWER_EFFICIENT_DEFAULT
	[arch] arm,arm64
	[plat] sharkl3,roc1
	[field] code
	[subsys] power
	[must] user
	[function] power efficient work queue
X509_CERTIFICATE_PARSER
	[arch] arm64,arm
	[plat] sharkl3,sharkle
	[field] menu
	[subsys] security
	[must] user
	[function] X.509 certificate parser
XFRM
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Support for xfrm
XFRM_ALGO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for xfrm algorithum
XFRM_FRAGMENT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support pkt fragment in ip layer before esp. By using this
		   one,control parameter will be set to one. It is only for
		   sprd until now. It is used for vowifi.
XFRM_IPCOMP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for ip comparing
XFRM_MIGRATE
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] A feature to update locator(s) of a given IPsec security
		association dynamically.  This feature is required, for
		instance, in a Mobile IPv6 environment with IPsec configuration
		where mobile nodes change their attachment point to the Internet
XFRM_STATISTICS
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This statistics is to show statistics about transformation
		   factor at packet processing for developer.It is used for
		   vowifi.
XFRM_SUB_POLICY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support sub policy for developers. By using sub policy with
		   main one, two policies can be applied to the same packet at
		   once. It is used for vowifi.
XFRM_USER
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Support for Transformation(XFRM) user configuration interface
		like IPsec used by native Linux tools
XPS
	[arch] all
	[plat] all
	[field] menu,net
	[subsys] net
	[must] user
	[function] To enable XPS, the bitmap of CPUs that may use a transmit
		queue is configured using the sysfs file entry:
		/sys/class/net/<dev>/queues/tx-<n>/xps_cpus
ZBOOT_ROM_BSS
	[arch] arm
	[plat] sharkle32,sharklefp,pike2
	[field] make
	[subsys] core
	[must] console
	[function] Compressed ROM boot loader BSS address.
ZBOOT_ROM_TEXT
	[arch] arm
	[plat] pike2,sharkle32,sharkl2
	[field] make
	[subsys] core
	[must] code
	[function] Compressed ROM boot loader base address.
ZBUD
	[arch] all
	[plat] isharkl2,iwhale2,sharkl2,sharkl3,sharklj1,sharkle
	[field] make,code
	[subsys] memory
	[must] ZCACHE feature
	[function] an memory allocator for storing compressed pages.
ZCACHE
	[arch] all
	[plat] isharkl2,sharkl2,sharkl3,sharklj1,sharkle
	[field] make,code
	[subsys] memory
	[must] android O with RAM is more than 2G
	[function] compress file cache, then put into memory.
ZLIB_DEFLATE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support uncompress zlib by deflate.
ZLIB_INFLATE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support uncompress zlib by inflate.
ZONE_DMA
	[arch] all
	[plat] sharkl3,sharkle
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Dma zone.
ZONE_DMA_FLAG
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Used in the slab.
ZRAM
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] user
	[function] SWAP partition based on RAM is used to access the compressed anon page
		   to avoid the influence of IO speed restriction on the system,
		   which is equivalent to increasing the size of available memory.
ZRAM_LZ4_COMPRESS
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] user
	[function] One excellent compress algorithm, which is used by zram on sprd platform after
		   Android N.
ZSMALLOC
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] user
	[function] The Zsmalloc allocator attempts to store multiple
		   objects of the same size on a composite page
