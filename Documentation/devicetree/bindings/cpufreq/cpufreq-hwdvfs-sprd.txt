DT binding for Unisoc apcpu hardware dvfs driver in platforms whose dvfs ip is similar to sharkl5
=================================================================================================

Both topdvfs_controller and cpudvfs_dev nodes listed below  must be defined.

Node topdvfs_controller
------------------------
Required properties:
- compatible: must include: sprd,sharkl5-topdvfs and syscon
- sprd,syscon-enable: A phandle to the aon apb controller node
- module-enable-cfg: A property describing how to enable or disable the
			topdvfs_controller configuration. for example, <0x4 7>
			means the register offset in aon apb controller is 0x4,
			the control bit is 7.
- reg: physical base address and the length of the register set for
	the top dvfs device.
- cpu-dcdc-cells: A phandle to the power domains supplying for cpus,
	every power domain which supports hardware dvfs function has its own
	dvfs controller in top dvfs device.
	- dcdc_cpuX: child node of topdvfs_controller node, X represets the
		number of cpu power domain.
		- dcdc-dvfs-enable: A property describing some necessary
			information to control the dcdc's hardware dvfs function,
			including the register offset, the control bit and the
			flag indicating whether the current cpu power domain's
			hw dvfs function is enabled or not. for example,
			<0x68 20 1> means the register offset is 0x68, the
			control bit is 20, and the current cpu power domain's
			hw dvfs function should be enabled.
		- dcdc-judge-vol-sw: A property describing some necessary
			information for the judge voltage which must matched
			witch the real voltage value before enable the hardware
			dvfs function.
		- dcdc-subsys-tune-enable: A property describing how to control
			the dvfs functon of a system supplied by dcdc_cpuX.
                        for example, <0x150 6 1> means that the register offset
			is 0x150, the control bit is 6, and the hw dvfs
			function is should be enabled.
		- voltage-grade-num: A property describing the total number of
			voltage grade for the dcdc_cpuX.
		- voltage-grade: The list of voltage grade for dcdc_cpuX, every
			entry of this list describes how to set a voltage grade.
                        for example, <2 0x100 0xF4 18 0x1FF> means that the
			voltage grade is 2, the voltage value of this grade is
			0x100(0.8V), the register offset in topdvfs_controller
			is 0xF4, the left shift base bit is 0, the mask is 0x1FF
		- chnl-in-i2c: A property to determine if this power domain uses
			an i2c channel to adjust voltage.
		- top-dvfs-adi-state: A property describing the way to get
			current top dvfs fsm state. for example,<0x70 0 0xF>
			means the register offset in top dvfs controller is 0x70
			the left shift base bit is 0, the mask is 0xF, so you
			should get current top dvfs fsm state from bit[3:0] in
			the top dvfs register whose offset is 0x70.
		- top-dvfs-i2c-state: A property describing the way to get
		  	current top dvfs fsm state, if the domain uses an i2c
			channel to adjust the voltage for dcdc_cpuX, the detail
			method.
- device-dcdc-cells: A phandle to the power domains supplying for devices
			excluding DSU and cores, every power domain which supports
			hardware dvfs function has its own dvfs controller in
			top dvfs device.
	- dcdc_XX: child node of topdvfs_controller node, XX represents the
		  device name such as mm, modem
		- dcdc-dvfs-enable: A property describing how to control the
			dvfs function of power domain dcdc_XX. for example,
			<0x18 20 0> means that the register offset is 0x18, the
			function control bit is 20, and the hw dvfs function
			should be disabled.
		- dcdc-judge-vol-sw: A property describing some necessary
			information of the judge voltage which must be matched
			with the real voltage value before enable the hardware
			dvfs function. for exapmple, <0x18 1 0x7 7> means the
			register offset is 0x18, the left shift base bit is 1,
			the mask is 0x7, the current real voltage for this
			dcdc_XX power domain is 7(1.0v).
		- dcdc-subsys-cells: A phandle to the subsystem supplied by
		 	 dcdc_XX.
			- YY_sys: child node of dcdc_XX, YY represents the name
			  of a subsystem.
				-dcdc-subsys-tune-enable: A property describing
					how to control the hw dvfs function of
					the YY_sys.for example, <0x150 5 0>
					means the register offset is 0x150, the
					control bit is 5, and the hw dvfs
					function should be disabled.
Optional properties:
- None


Node cpudvfs_dev
-----------------------------------
- cpudvfs_dev:  Represent a ap cpu hardwre dvfs device
	- compatible: should be sprd,sharkl5-cpudvfs.
	- sprd,syscon-enable: A phandle to aon apb controller.
	- module-enable-cfg: A property describing how to enable or disable the
			topdvfs_controller configuration. for example, <0x4 7>
			means the register offset in aon apb controller is 0x4,
			the control bit is 7.
	- topdvfs-controller: A phandle to the topdvfs_controller node.
	- reg: physical base address and the length of the register set for
		the top dvfs device.
	- mpll-cells: A phandle to mpll node
		- mpll_x: A specific mpll node
			- sprd,syscon-ang: A phandle to an analog register
			  controller.
			- mpll-rst: A property describing how to set the clock
				output from mpll_x by hardware dvfs not by
				software.for example, <0x44 4 6 7> means the
				register offset in analog register is 0x44, the
				MPLLx_POSTDIV is bit 4, the MPLLx_ICP is bit 6,
				the MPLLx_N is bit 7; only all those bits are 0,
				the clock output is controlled by hardware dvfs.
			- relock-cfg: A property describing how to enable the
				relock function of the mpll_x.for example,
				<0x244 1> means the register offset in apcpu
				dvfs controller is 0x244, if the bit[1] of that
				reigster is 1, the relock function of the mpll_x
				is enabled, or disabled.
			- pd-cfg: A property describing how to enable the power
				down function of the mpll_x.for example,
				<0x244 0> means the register offset in apcpu
				dvfs controller is 0x244, if the bit[0] of that
				register is 1, the power function of the mpll_x
				is enabled, or disabled.
	- apcpu-dvfs-dcdc-cells: A phandle to cpu power domain nodes
			- apcpu_cpuX: A specific apcpu power domain
				- subsys-dcdc-vol-sw: A property describing how
					to inform the current voltage of the
					apcpu_cpux to apcpu_cpuX dvfs fsm.
				- dcdc-dvfs-fsm-state: A property describing the
					way how to get the current dvfs fsm
					state of a subsystem.for example,
					<0x44 0 0x7> means you can get the dvfs
					fsm state of apcpu_cpuX from bit[2:0] in
					register in apcpu dvfs controller whose
					offset is 0x44.

	- cpudvfs-clusters: A phandle to cpu clusters in cpudvfs_dev
		- XXX_cluster: A specific cluster whose pair of voltage and
			frequency varies differently from other clusters.
			- cluster-name: The name of XXX_cluster.
			- row-num: The row number of hardware dvfs map table of
				XXX_cluster.
			- column-num: The column number of hardware dvfs map
				table of XXX_cluster.
			- XXX-dvfs-tbl: The table of hardware dvfs map table of
				XXX_cluster, every entry of the table organized
				in a certain way described as follows:
				|sel|div|volt|scu_idx|peri_idx|gic_idx|mpll_idx|
				  1   1   0     1       1        1	0
			- work-index-cfg: A property describing the way how to
				set a work index to XXX_cluster or get the
				current work index of XXX_cluster.for example,
				<0x214 0xF> means the register offset in apcpu
				dvfs controller is 0x214, the default base bit
				is 0, the mask is 0xF, so you should set a work
				index to bit[3:0] in apcpu dvfs controller whose
				offset is 0x214, in the same way you can get the
				current work index from that register.
			- idle-index-cfg: A property describing the way how to
				set a idle index to XXX_cluster or get the
				current idle index of XXX_cluster, for detail
				method, please refer to the previous description
				of work-index-cfg.
			- tuning-latency-us: The delay time(in microsecond)
				needed to wait after configuring a work index to
				XXX_cluster.
			- tuning-result-judge: Tell software the dvfs tuning
			  	result is needed to judge or not needed to judge
			- dcdc-name: The name of a cpu power domain which the
			  	XXX_cluster is belong to.
			- map-tbl-regs: An array of apcpu dvfs register which is
				used to store the table entry information of
				XXX-dvfs-tbl, the size of the register array is
				same with the row number of XXX-dvfs-tbl.
			- column-entry-start-bit: An array which is used to
			  	store the left shift base bit for every column
				information of XXX-dvfs-tbl.
			- column-entry-mask: An array of which is used to store
				the left shift mask for every column information
				of XXX-dvfs-tbl.
			- cluster-devices: A phandle to device node
				-XXX_dev: A specific device or module who is in
					XXX_cluster
					- device name: The name of a specific
						device or module whose voltage
						and frequency are both
						controlled by hardware dvfs fsm
					- sel-get: A property describing the way
						how to get current clock sel of
						the XXX_dev.for example,
						<0x38 0 3> means the register
						offset in apcpu dvfs controller
						is 0x38, the right shift base
						bit is 0, the right shift mask
						is 0x3, so you can get the
						current clock source from
						bit[1:0] in the apcpu dvfs
						register whose offset is 0x38.
					- div-get: A property describing the way
						how to get current clock div of
						the XXX_dev.for example,
						<0x38 2 0x7> means the register
						offset in apcpu dvfs controller
						is 0x38, the right shift base
						bit is 2, the right shift mask
						is 0x7, so you can get the
						current clock division from
						bit[4:2] in the apcpu dvfs
						register whose offset is 0x38.
					- vol-get: A property describing the way
						how to get current clock voted
						voltage of the XXX_dev.for
						example, <0x30 0 0x7> means the
						register offset in apcpu dvfs
						controller is 0x30, the right
						shift base bit is 0, the right
						shift mask is 0x7, so you can
						get the current clock division
						from bit[4:2] in the apcpu dvfs
						register whose offset is 0x30.

Optional properties:
- dcdc-cpu0-supply: A phandle to the regulator for power domain dcdc-cpu0
- dcdc-sram-supply: A phandle to the regulator for power domain dcdc-sram

Example 1: Example for topdvfs_controller
---------
topdvfs_controller: topdvfsctrl@322A0000 {
	compatible = "sprd,sharkl5-topdvfs", "syscon";
	sprd,syscon-enable = <&aon_apb_regs>;
	dcdc-cpu0-supply = <&vddcpu>;
	dcdc-sram-supply = <&vddsram>;
	module-enable-cfg = <0x4 7>;
	reg = <0 0x322A0000 0 0x8000>;
	cpu-dcdc-cells = <&dcdc_cpu0>;
	device-dcdc-cells = <&dcdc_mm>;
	dcdc_cpu0: dcdc-cpu0{
		dcdc-dvfs-enable = <0x68 20 1>;
		dcdc-judge-vol-sw = <0x68 1 0x7 7>;
		dcdc-subsys-tune-enable = <0x150 6 1>;
		top-dvfs-adi-state = <0x70 0 0xF>;
		voltage-grade-num = <7>;
		voltage-grade = <0 0xE0 0xF4 0 0x1FF>,
				<1 0xF0 0xF4 9 0x1FF>,
				<2 0x100 0xF4 18 0x1FF>,
				<3 0x110 0xF8 0 0x1FF>,
				<4 0x120 0xF8 9 0x1FF>,
				<5 0x130 0xF8 18 0x1FF>,
				<6 0x140 0xFC 0 0x1FF>;
		chnl-in-i2c = <0>;
	};

	<...>

	dcdc_mm: dcdc-mm {
		dcdc-dvfs-enable = <0x18 20 0>;
		dcdc-judge-vol-sw = <0x18 1 0x7 7>;
		dcdc-subsys-cells =	<&audcp_sys>,
					<&gpu_sys>,
					<&mm_sys>;
		audcp_sys: audcp-sys {
			dcdc-subsys-tune-enable = <0x150 5 0>;
		};

		<...>
	};

	<...>
};

Example 2: Example for cpudvfs_dev
---------

cpudvfs_dev: cpudvfs-dev@322A8000 {
	compatible = "sprd,sharkl5-cpudvfs";
	sprd,syscon-enable = <&aon_apb_regs>;
	module-enable-cfg = <0x4 7>;
	topdvfs-controller = <&topdvfs_controller>;
	reg = <0 0x322A8000 0 0x1000>;
	mpll-cells = <&mpll_0>;
	apcpu-dvfs-dcdc-cells =	<&apcpu_cpu0>,
	cpudvfs-clusters =	<&lit_core_cluster>;
	lit_core_cluster: lit-core-cluster {
		cluster-name = "lit-core-cluster";
		row-num = <10>;
		column-num = <7>;
		work-index-cfg = <0x214 0xF>;
		idle-index-cfg = <0x218 0xF>;
		tuning-latency-us = <200>;
		tuning-result-judge = <1>;
		dcdc-name = "DCDC_CPU0";
		dcdc-dvfs-fsm-state = <0x44 0 7>;
		map-tbl-regs = <0x60 0x64 0x68 0x6c 0x70 0x74 0x78 0x7c 0x80 0x84>;
		column-entry-start-bit = <0 2 15 5 9 18 12>;
		column-entry-mask = <0x3 0x7 0x7 0xF 0x7 0x7 0x7>;
		cluster-devices =	<&lit_core0_dev>,
		lit-core-dvfs-tbl = <
					0 0 0 0 0 0 0
					1 1 0 1 1 1 0
					2 1 2 2 2 2 0
					3 0 2 3 2 3 0
					3 0 2 4 3 4 1
					1 0 2 5 4 4 0
					3 0 6 6 4 4 2
					2 0 6 7 4 4 0
					3 0 6 8 4 5 3
					3 0 6 9 5 5 4
				>;
		lit_core0_dev:	lit-core0-dev {
				device-name = "cpu0";
				sel-get = <0x38 0 3>;
				div-get = <0x38 2 7>;
				vol-get = <0x30 0 7>;
		};

		<...>
	};

	<...>

	mpll_0: mpll-ananke{
		sprd,syscon-ang = <&anlg_phy_g3_regs>;
		mpll-rst = <0x98 4 6 7>;
		relock-cfg = <0x244 1>;
		pd-cfg = <0x244 0>;
	};

	<...>

	apcpu_cpu0: apcpu-cpu0 {
		subsys-dcdc-vol-sw = <0x20 4 0x7 7>;
		subsys-dvfs-state = <0x44 0 7>;
	};

	<...>
};


